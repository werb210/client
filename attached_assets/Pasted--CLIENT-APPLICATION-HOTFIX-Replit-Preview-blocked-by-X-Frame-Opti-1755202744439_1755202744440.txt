# ============================
# CLIENT APPLICATION — HOTFIX: Replit Preview blocked by X-Frame-Options / CSP
# Replit Rules Header (agent): Exact Execution • One block per app • No questions • Paste logs after running
# ============================
set -euo pipefail

# 0) Deps (idempotent)
npm i helmet cors

# 1) Add a dev-only middleware that:
#    - removes X-Frame-Options
#    - disables Helmet frameguard/COOP/COEP
#    - allows Replit preview domains via frame-ancestors
mkdir -p server/middleware
cat > server/middleware/replitPreview.ts << 'EOF'
import type { Request, Response, NextFunction } from "express";
import helmet from "helmet";

const replitAncestors = [
  "'self'",
  "https://replit.com",
  "*.replit.com",
  "*.replit.dev",
  "*.id.repl.co",
];

export const stripXfo = (_req:Request, res:Response, next:NextFunction) => {
  // Remove any upstream frame headers that break the Replit iframe
  res.removeHeader("X-Frame-Options");
  next();
};

// Helmet configuration that keeps embedding open in dev
export const replitHelmet = helmet({
  frameguard: false,                      // don't set X-Frame-Options
  crossOriginOpenerPolicy: false as any,  // allow iframe embedding
  crossOriginEmbedderPolicy: false,       // allow third-party iframes/resources
  contentSecurityPolicy: {
    useDefaults: true,
    directives: {
      "frame-ancestors": replitAncestors,
    },
  },
});
EOF

# 2) Wire it near the top of server/index.ts (before any static/route handlers)
#    This is additive and idempotent; it won't double-insert.
if ! grep -q "replitPreview.ts" server/index.ts; then
  # Ensure imports exist
  sed -i.bak '1i\
import cors from "cors";\
import { stripXfo, replitHelmet } from "./middleware/replitPreview";' server/index.ts

  # Trust proxy & CORS (useful in Replit)
  awk '
    BEGIN { inserted=0 }
    { print }
    !inserted && /const app =/ {
      print "app.set(\"trust proxy\", 1);";
      print "app.use(cors({ origin: /replit\\.dev$|replit\\.com$/i, credentials: false }));";
      print "if (process.env.NODE_ENV !== \"production\") { app.use(stripXfo); app.use(replitHelmet); }";
      inserted=1
    }
  ' server/index.ts > server/index.ts.tmp && mv server/index.ts.tmp server/index.ts
fi

# 3) Add a tiny health endpoint (handy to confirm the process is alive)
if ! grep -q "/_health" server/index.ts; then
  cat >> server/index.ts << 'EOF'

// --- DEV HEALTH ENDPOINT (ok to keep in prod) ---
app.get("/_health", (_req, res) => {
  res.status(200).json({ ok: true, ts: new Date().toISOString() });
});
EOF
fi

# 4) Rebuild/restart (Replit usually runs a watcher, but we force it)
npm run build || true
npm run start || true

# 5) Quick header sanity check (shows no X-Frame-Options and allowed frame-ancestors)
# Comment these out if your environment blocks curl, otherwise they print to the Replit console.
( sleep 2
  echo "---- HEADERS / (root) ----"
  curl -sI "http://127.0.0.1:${PORT:-5000}/" | sed -n '1,20p' || true
  echo "---- HEADERS /_health ----"
  curl -sI "http://127.0.0.1:${PORT:-5000}/_health" | sed -n '1,20p' || true
) &

echo ">>> Hotfix applied. If Preview still shows a gray box, click 'Open in new tab' (external) once, then back to Preview."
