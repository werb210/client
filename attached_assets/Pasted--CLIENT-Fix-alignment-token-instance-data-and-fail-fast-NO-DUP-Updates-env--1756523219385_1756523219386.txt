# ‚îè CLIENT: Fix alignment (token ‚Üí instance ‚Üí data) and fail fast (NO-DUP) ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îì
# ‚Ä¢ Updates env, verifies token FP & X-DB-Host, then asserts counts/required-docs
# ‚Ä¢ Deletes prior recon scripts to keep a single source of truth
# ‚Ä¢ Prints clear fixes if anything is off
# ‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îõ
set -euo pipefail

echo "== CLIENT ENV (before) =="
echo "VITE_STAFF_API_URL=${VITE_STAFF_API_URL:-https://staff.boreal.financial/api}"
echo "VITE_CLIENT_APP_SHARED_TOKEN set? $([ -n "${VITE_CLIENT_APP_SHARED_TOKEN:-}" ] && echo yes || echo no)"

# 1) Paste the EXACT EXPECTED_* exports from Staff (NON-SECRET):
export EXPECTED_DB_HOST="ep-morning-mode-a58uk90g.us-east-2.aws.neon.tech"
export EXPECTED_TOKEN_FP="0944508707a9"
export EXPECTED_PRODUCTS="44"
export EXPECTED_LENDERS="30"
export EXPECTED_MIN_REQUIRED_DOCS="3"

BASE="${VITE_STAFF_API_URL:-https://staff.boreal.financial/api}"
mkdir -p scripts reports
rm -f scripts/check_alignment.mjs 2>/dev/null || true

# 2) Single alignment script (no-dup)
cat > scripts/check_alignment.mjs <<'JS'
import crypto from "crypto";
const BASE=(process.env.VITE_STAFF_API_URL||"https://staff.boreal.financial/api").replace(/\/+$/,'');
const TOK =process.env.VITE_CLIENT_APP_SHARED_TOKEN||"";
const EXP_DB   = process.env.EXPECTED_DB_HOST||"";
const EXP_FP   = process.env.EXPECTED_TOKEN_FP||"";
const EXP_PROD = Number(process.env.EXPECTED_PRODUCTS||"0");
const EXP_REQ  = Number(process.env.EXPECTED_MIN_REQUIRED_DOCS||"0");
const fp = s => crypto.createHash("sha256").update(s).digest("hex").slice(0,12);
async function req(p,opt={}){ const url=`${BASE}${p}${p.includes("?")?"&":"?"}t=${Date.now()}`; const r=await fetch(url,{...opt,headers:{Authorization:`Bearer ${TOK}`,...(opt.headers||{})}}); const headers=Object.fromEntries([...r.headers.entries()].map(([k,v])=>[k.toLowerCase(),v])); const ct=r.headers.get("content-type")||""; let body=null; try{ body=ct.includes("json")? await r.json() : await r.text(); }catch{}; return {url,status:r.status,headers,body}; }
(async()=>{
  const myFp = fp(TOK);
  const prods = await req("/v1/products");
  const docs  = await req("/required-docs");
  const count = Array.isArray(prods.body)? prods.body.length : null;
  const hdrDb = prods.headers["x-db-host"]||null;
  const out = {
    base: BASE,
    my_token_fp: myFp, expected_token_fp: EXP_FP, token_fp_match: myFp===EXP_FP,
    products_status: prods.status, products_count: count, expected_products: EXP_PROD,
    x_db_host: hdrDb, expected_db_host: EXP_DB, db_host_match: hdrDb===EXP_DB,
    required_docs_status: docs.status, required_docs_count: Array.isArray(docs.body)? docs.body.length : null, expected_min_required_docs: EXP_REQ
  };
  console.log(JSON.stringify(out,null,2));
  // Hard fails (fix in this order): token ‚Üí instance ‚Üí data
  if (myFp!==EXP_FP) process.exit(10);
  if (prods.status!==200 || !hdrDb || hdrDb!==EXP_DB) process.exit(20);
  if (!(typeof count==="number" && count>=EXP_PROD)) process.exit(30);
  if (!(docs.status===200 && (out.required_docs_count??0) >= EXP_REQ)) process.exit(40);
})();
JS

# 3) Run alignment; provide precise fixes on failure
set +e
node scripts/check_alignment.mjs | tee reports/client_alignment.json
rc=$?
set -e

if [ $rc -ne 0 ]; then
  echo ""
  case $rc in
    10)
      echo "‚ùå TOKEN mismatch."
      echo "   Expected token FP: ${EXPECTED_TOKEN_FP}"
      echo "   Current  token FP: $(node -e 'const c=require(\"crypto\");const f=s=>c.createHash(\"sha256\").update(s).digest(\"hex\").slice(0,12);console.log(f(process.env.VITE_CLIENT_APP_SHARED_TOKEN||\"\"))')"
      echo "   üëâ ACTION: Set VITE_CLIENT_APP_SHARED_TOKEN to Staff's CLIENT_SHARED_BEARER (exact string). Rebuild/restart."
      ;;
    20)
      echo "‚ùå INSTANCE mismatch or missing header."
      echo "   Expected X-DB-Host: ${EXPECTED_DB_HOST}"
      echo "   Got                : $(node -e 'try{console.log(require(\"./reports/client_alignment.json\").x_db_host)}catch{console.log(\"(unknown)\")}')"
      echo "   üëâ ACTIONS:"
      echo "     ‚Ä¢ Ensure VITE_STAFF_API_URL=https://staff.boreal.financial/api"
      echo "     ‚Ä¢ Bypass caches (script adds ?t=timestamp; server sends Cache-Control: no-store)"
      echo "     ‚Ä¢ Disable any service worker/local proxy/VPN rewriting API"
      ;;
    30)
      echo "‚ùå DATA mismatch: products < ${EXPECTED_PRODUCTS}."
      echo "   üëâ ACTION: After fixing token/instance, you must see 44 products. If not, you're still on the wrong env."
      ;;
    40)
      echo "‚ùå /required-docs mismatch: expected 200 with >= ${EXPECTED_MIN_REQUIRED_DOCS} docs."
      echo "   üëâ ACTION: You‚Äôre not on the updated Staff build or still misaligned; re-check token & instance."
      ;;
    *)
      echo "‚ùå Alignment failed (code $rc). Check reports/client_alignment.json for details."
      ;;
  esac
  exit 2
fi

echo "‚úÖ CLIENT ALIGNED:"
echo "   ‚Ä¢ Token FP matches ${EXPECTED_TOKEN_FP}"
echo "   ‚Ä¢ X-DB-Host matches ${EXPECTED_DB_HOST}"
echo "   ‚Ä¢ Products >= ${EXPECTED_PRODUCTS}"
echo "   ‚Ä¢ /required-docs >= ${EXPECTED_MIN_REQUIRED_DOCS}"
