You’re seeing “no lender products” in the client because the client isn’t actually getting the 44 items the Staff app is serving. Let’s prove that **from the client side** (using the same env/headers the app uses), and make the result unambiguous.

Below are two tiny, copy-paste probes. Run them in the **client app repo** and paste the outputs back.

---

# 1) One-shot cURL probe (fastest)

```bash
# Replace the token with your client env token if not exported
export VITE_STAFF_API_URL=${VITE_STAFF_API_URL:-https://staff.boreal.financial/api}
export VITE_CLIENT_APP_SHARED_TOKEN=${VITE_CLIENT_APP_SHARED_TOKEN:?<set token>}

echo "BASE=$VITE_STAFF_API_URL"
echo "TOKEN set? $( [ -n "$VITE_CLIENT_APP_SHARED_TOKEN" ] && echo yes || echo no )"

# Show status, headers, and first lines to catch HTML/CORS/errors
curl -i -sS \
  -H "Authorization: Bearer $VITE_CLIENT_APP_SHARED_TOKEN" \
  "$VITE_STAFF_API_URL/v1/products" | sed -n '1,40p'

# Clean JSON: print count and a sample row
curl -sS \
  -H "Authorization: Bearer $VITE_CLIENT_APP_SHARED_TOKEN" \
  "$VITE_STAFF_API_URL/v1/products" | jq 'length as $n | {count:$n, sample:(.[0]//null)}'
```

**Interpretation**

* If you see `HTTP/1.1 200` and `Content-Type: application/json` and `count: 44` → Staff is fine; the client UI/state is the issue (see “Fix by outcome” below).
* If `401/403` → token mismatch; make sure client’s `VITE_CLIENT_APP_SHARED_TOKEN` == Staff’s `CLIENT_SHARED_BEARER`.
* If `404` → wrong base (missing `/api`) or wrong path.
* If `Content-Type: text/html` → a proxy/SPA page is answering; your base URL is wrong (should include `/api`) or a CDN is intercepting.

---

# 2) Node probe (uses the same env the client bundles)

Create `scripts/pull_products_now.mjs`:

```js
// Node 18+ (global fetch). Prints status, content-type, count, and a sample.
const BASE = process.env.VITE_STAFF_API_URL || 'https://staff.boreal.financial/api';
const TOK  = process.env.VITE_CLIENT_APP_SHARED_TOKEN || '';

(async () => {
  const r = await fetch(`${BASE}/v1/products`, { headers: { Authorization: `Bearer ${TOK}` } });
  const ct = r.headers.get('content-type') || '';
  let body = null; try { body = await r.json(); } catch {}
  const count = Array.isArray(body) ? body.length : null;
  console.log(JSON.stringify({
    url: `${BASE}/v1/products`,
    status: r.status,
    contentType: ct,
    count,
    sample: Array.isArray(body) ? body[0] : body
  }, null, 2));
  if (!r.ok || !ct.includes('application/json')) process.exit(2);
})();
```

Run:

```bash
VITE_STAFF_API_URL=https://staff.boreal.financial/api \
VITE_CLIENT_APP_SHARED_TOKEN=*** \
node scripts/pull_products_now.mjs
```

---

## Fix by outcome (apply the first that matches your probe result)

1. **200 JSON, `count: 44`**
   Staff is returning data. The client “0 items” is from the UI/data layer:

   * Ensure your client is actually using the network result (disable local resilience/fallbacks temporarily).
   * In your HTTP wrapper, log at INFO the **base URL**, **Authorization header present (yes/no)**, **response status**, and **array length** right before state is updated.
   * Verify your product normalizer isn’t filtering everything (e.g., `active` coercion, wrong country key).

2. **200 JSON, `count: 0`**
   You’re hitting the **wrong environment** (a Staff instance with an empty DB) or a **different token** mapped to a filtered tenant.

   * Confirm: `echo $VITE_STAFF_API_URL` includes `/api` and points to **production**.
   * Confirm tokens match exactly: client `VITE_CLIENT_APP_SHARED_TOKEN` == staff `CLIENT_SHARED_BEARER`.
   * If you have multiple Staff deployments, the URL might point at staging: switch to `https://staff.boreal.financial/api`.

3. **401 / 403**
   Token mismatch or missing header.

   * Fix the env: set `VITE_CLIENT_APP_SHARED_TOKEN` to the staff token; rebuild/restart the client.
   * Ensure the wrapper always sends `Authorization: Bearer <token>`.

4. **404**
   Wrong path or missing `/api`.

   * Use `https://staff.boreal.financial/api/v1/products`.

5. **HTML (text/html)**
   You’re hitting the SPA or CDN, not the API.

   * Add `/api` to the base, or bypass the proxy.
   * Check that any dev reverse proxy isn’t rewriting `/v1/products` to the frontend.

---

## What I need from you to “report back”

Paste the outputs of either probe (preferably both):

* The **first 20 lines** from the `curl -i` command.
* The JSON from `pull_products_now.mjs`.

With that, I’ll tell you exactly why the client says “no lender products” and give the one-line fix (env, token, base URL, or client state wiring).
