Below is a quick triage checklist to restore the **real portal** (Step 1 landing) instead of the temporary “test page”.

---

## 1 — Verify what is inside `/dist`

1. In the Replit file tree open `dist/`.
2. Make sure **`index.html`** (the real portal entry) is present.
3. Make sure you did **not** copy the temporary test file (often named something like `test-status.html`) into `dist`.

   * If you see a file you created only for diagnostics, delete it.

> **If `index.html` is missing**, rebuild the bundle on your local machine:
>
> ```bash
> npm run build                      # from the project root  
> # dist/ will contain index.html, assets/, etc.  
> ```
>
> Upload the new `dist/` folder to Replit, replacing the old one.

---

## 2 — Point every request back to `index.html`

In `server/index.ts` (or wherever you added the **FORCE\_PRODUCTION** logic) make sure the catch-all route sends back *index.html*, **not** the test page.

```ts
if (process.env.FORCE_PRODUCTION === 'true') {
  const dist = path.join(__dirname, '../dist');

  app.use(express.static(dist));

  // 👇 catch-all MUST serve index.html so React Router takes over
  app.get('*', (_req, res) =>
    res.sendFile(path.join(dist, 'index.html')));
  
  return start();               // your app.listen wrapper
}
```

> **Common mistake:** leaving a line such as
> `res.sendFile(path.join(dist, 'test-status.html'));`
> Replace it with `index.html`.

---

## 3 — Remove (or comment out) the temporary route

If, during debugging, you added something like:

```ts
app.get('/diagnostic', (_req, res) => {
  res.sendFile(path.join(dist, 'diagnostic.html'));
});
```

that’s fine, but **do not** mount it at `/` or you will mask the real SPA.
Keep the diagnostic page on a separate path (`/diagnostic`) if you still need it.

---

## 4 — Clean browser & Replit cache, then restart

1. Open Replit shell → `pnpm install` (if any deps changed).
2. Click **“Run”** (or `npm start`) to restart the container.
3. In your local browser:

   * **Hard-refresh** (⌘ Shift R or Ctrl F5).
   * If you still see the test page, open DevTools → Network → disable cache → refresh.

You should now land on **Step 1** of the loan workflow (“What are you looking for?”) just like before.

---

## 5 — Quick validation script

Optional: create a tiny Node script to confirm the right file is served.

```bash
curl -s https://clientportal.boreal.financial | head -10
```

You should see the beginning of the **real** `index.html` (`<!DOCTYPE html>` plus the Boreal title), not the diagnostic markup.

---

### If problems persist

* Double-check the order of middleware: `express.static(dist)` must come **before** `app.get('*', …index.html…)`.
* Search for any leftover `res.send('test page…')` strings in the server.
* Make sure nothing in React Router (`<Route path="/">…`) was replaced by a diagnostic component.

Once those points are fixed, the original portal loads, and you can proceed through Steps 1 → 7. Let me know if any step above needs clarification.
