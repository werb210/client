Best Estimate — Root Cause Breakdown:
✅ 1. Legacy vs Step-Based Format Mismatch (Most Likely)
Client was previously submitting flat field format ({legalName, firstName} etc.)

Staff now enforces strict step-based structure ({step1, step3, step4})

Any submission still using legacy or mixed format is rejected

⚠️ This includes Step 7 (Final Submission) and any retry flows, which you just confirmed had legacy fallback.

➡️ Most likely cause: Client is sending data in wrong format or Staff is expecting a structure that isn't clearly documented to Client.

⚠️ 2. Missing Critical Fields or Steps
Staff now requires specific fields:

step1.requestedAmount

step3.businessName

step4.email

If even one of these is missing or null, Staff rejects the application

If step3 or step4 is undefined at submission time, the entire app is invalid

⚠️ 3. Wrong API Endpoint or Headers
If Client submits to the wrong URL (e.g., /applications/submit instead of /applications) or omits Content-Type: application/json, the request may silently fail

A misconfigured CORS policy or token might also block the request before it even hits Staff backend

⚠️ 4. Application or Document Submission Decoupled
If Client submits the application JSON in Step 4, but documents only in Step 5 or 6, the server may:

Accept one part

Mark the other as incomplete

Or worse, overwrite prior partial submissions

⚠️ 5. SignNow Trigger Firing Too Early
If Staff tries to generate a SignNow document before valid step1/step3/step4 is received, the document will:

Be blank

Have empty smart fields

Fail silently, and downstream webhooks fail to associate it with a real app

✅ Recommended Immediate Actions
Action	Responsibility	Purpose
✅ Log and inspect payload from Client → Staff on /applications	Staff	Confirm if it’s truly {step1, step3, step4} or legacy
✅ Inspect SignNow document linked to that app	Staff	Check if smart fields are blank due to missing values
✅ Ensure Step 7 sends full structured object	Client	Eliminate all flat field usage (firstName, legalName at top level)
✅ Add debug to document upload API	Staff	Ensure files are being attached to correct applicationId
✅ Confirm applicationId is returned in Step 4 and reused in Steps 5–7	Client	Avoid mismatch between created application and attached files

