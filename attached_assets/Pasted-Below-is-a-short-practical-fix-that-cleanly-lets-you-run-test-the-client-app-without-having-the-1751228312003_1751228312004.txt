Below is a short, practical fix that cleanly lets you **run / test the client app without having the staff-side API online**.
It keeps the “real” staff integration intact for production, but in **DEV mode** the client will simply create a local session and continue.

---

## 🟧 Step-by-step

### 1 — Add a feature-flag env variable in the client

`client/.env` (or `.env.local`)

```
# when FALSE or missing → normal behaviour (calls staff API)
VITE_USE_STAFF_API=false
```

### 2 — Patch the client Auth service

`client/src/lib/api.ts`

```ts
// flag
const useStaff = import.meta.env.VITE_USE_STAFF_API !== "false";

// helper – returns a resolved promise when offline-mode
function offlineOk(data: any) {
  localStorage.setItem("bf:user", JSON.stringify(data));
  return { ok: true, json: async () => data };
}

// central request
export async function apiFetch(path: string, opts: RequestInit = {}) {
  if (!useStaff) {
    // dev / offline mode → never hit network
    return offlineOk({ mock: true });
  }

  return fetch(`${import.meta.env.VITE_API_BASE_URL}${path}`, {
    credentials: "include",
    mode: "cors",
    ...opts,
    headers: {
      "Content-Type": "application/json",
      ...opts.headers,
    },
  });
}
```

### 3 — Short-circuit the login flow

`client/src/context/Auth.tsx` (or wherever you call `login`)

```ts
export async function login({ email, password }: LoginInput) {
  if (!useStaff) {
    // Dev mode: create mock user
    setUser({ id: "mock-id", email, firstName: "Demo", role: "client" });
    navigate("/portal");
    return true;
  }

  // …existing live-API call here …
}
```

*(Same pattern for register / password-reset – just return a resolved promise when `!useStaff`.)*

### 4 — Document it

Add to **client/README.md**:

> **DEV shortcut** – Set `VITE_USE_STAFF_API=false` to bypass all staff-API traffic.
> A local mock user is stored in `localStorage bf:user` so the rest of the UI works.

---

## 🟦 Staff application

No change required.
When you’re ready to reconnect, just set
`VITE_USE_STAFF_API=true` (or remove the variable) and the client will start calling the real endpoints again.

---

### ✅ Result

* In development the login screen no longer waits for /auth calls; it logs in instantly.
* In staging / production (or whenever you flip the flag back) the exact same UI calls the staff API as before.
