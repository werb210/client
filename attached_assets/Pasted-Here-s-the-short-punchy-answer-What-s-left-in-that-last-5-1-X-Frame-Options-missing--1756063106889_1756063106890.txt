Here’s the short, punchy answer:

# What’s left in that last \~5%

1. **X-Frame-Options missing** (≈3%)
   Your responses don’t include `X-Frame-Options: DENY`. Most scanners dock you for this even if CSP is strict.

2. **CSP `frame-ancestors` too permissive** (≈2%)
   Your CSP currently allows Replit frames. For production, scanners want **no framing** unless you *must* embed.

---

# One-shot fix (client app)

**File:** `server/security/headers.ts` (or wherever you apply Helmet)

```ts
import helmet from "helmet";
import type { RequestHandler } from "express";

const inProd = process.env.NODE_ENV === "production";
const allowEmbed = process.env.ALLOW_EMBED === "true"; // only use if you truly need to embed

export const securityHeaders = (): RequestHandler[] => [
  helmet({
    contentSecurityPolicy: {
      useDefaults: true,
      directives: {
        "default-src": ["'self'"],
        "script-src": ["'self'"],
        "style-src":  ["'self'"],
        "img-src":    ["'self'", "data:"],
        "font-src":   ["'self'"],
        "connect-src":["'self'", process.env.STAFF_API_URL ?? ""].filter(Boolean),
        // ✅ tighten framing for production
        "frame-ancestors": allowEmbed
          ? ["'self'"]                                   // only if you *must* embed
          : ["'none'"],                                  // prefer no framing in prod
        "object-src": ["'none'"],
        "base-uri":   ["'self'"]
      }
    },
    referrerPolicy: { policy: "strict-origin-when-cross-origin" },
    crossOriginEmbedderPolicy: true,
    crossOriginOpenerPolicy: { policy: "same-origin" },
    crossOriginResourcePolicy: { policy: "same-origin" },
    hsts: inProd ? { maxAge: 15552000, includeSubDomains: true, preload: true } : false
  }),
  // ✅ explicitly add X-Frame-Options for auditors
  helmet.frameguard({ action: "deny" }),
  helmet.noSniff(),
  helmet.xssFilter(),
  ((req, res, next) => {
    res.setHeader(
      "Permissions-Policy",
      "camera=(), microphone=(), geolocation=(), payment=(), accelerometer=(), autoplay=(), usb=()"
    );
    next();
  }) as RequestHandler
];
```

Make sure you **call** `securityHeaders()` as the very first middleware in `server/index.ts`, before routes.

---

# Verify (copy/paste)

```bash
BASE=${CLIENT_BASE:-http://localhost:5000}

echo "Headers check:"
curl -sSI "$BASE/health" | awk 'BEGIN{IGNORECASE=1}/^x-frame-options|^content-security-policy|^strict-transport-security|^referrer-policy/'

echo
echo "Expect:"
echo "  X-Frame-Options: DENY"
echo "  Content-Security-Policy: frame-ancestors 'none' (or 'self' only if ALLOW_EMBED=true)"
echo "  Strict-Transport-Security: present (in production)"
```

If those two items are corrected, your score should tick from **A (90–95%) → A+ (100%)**.
