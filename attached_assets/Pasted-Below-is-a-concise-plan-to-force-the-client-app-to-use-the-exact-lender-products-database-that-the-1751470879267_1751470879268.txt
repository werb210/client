Below is a concise plan to **force the client app to use the exact lender-products database that the staff-side API exposes** and never fall back to (or cache) the old 8-product set.

---

## 1 Lock the API Endpoint in One Place

### a. Env variable (authoritative URL)

```bash
# client/.env
VITE_STAFF_API_URL=https://staffportal.replit.app
```

### b. Single source of truth in code

```ts
// src/api/constants.ts
export const STAFF_API = import.meta.env.VITE_STAFF_API_URL!; // ‘!’ so build fails if undefined
```

*Any build where the variable is missing will now throw.*

---

## 2 Delete or Gate the 8-Product Fallback

```ts
// src/api/lenderProducts.ts
import { STAFF_API } from "@/api/constants";

export async function fetchLenderProducts() {
  const res = await fetch(`${STAFF_API}/api/public/lenders`);
  if (!res.ok) throw new Error(`Staff API ${res.status}`);

  return res.json();              // ← no fallback here
}
```

*If you still want an emergency fallback for dev only:*

```ts
if (import.meta.env.MODE !== "production") {
  return localEightProductArray;
}
```

---

## 3 Purge Old Cached Data on First Run

If you’ve synced the 8-product set into IndexedDB/localStorage, wipe it once:

```ts
// src/startup/clearLegacyCache.ts
if (localStorage.getItem("legacyProducts")) {
  indexedDB.deleteDatabase("lenderProducts");
  localStorage.removeItem("legacyProducts");
}
```

Call this in `main.ts` **before** React mounts.

---

## 4 Fail Fast & Loud

Add a global error boundary or toast:

```ts
try {
  const products = await fetchLenderProducts();
  setProducts(products); // 43+ expected
} catch (err) {
  toast.error("Lender products unavailable – please try again later.");
  // Optionally log to Sentry
}
```

No silent fallback → developers notice instantly if the API ever misbehaves.

---

## 5 CI Safeguard

Add a Cypress/Playwright test in your pipeline:

```ts
test("fetches at least 40 lender products", async ({ page }) => {
  const res = await page.evaluate(async () =>
    (await fetch("https://staffportal.replit.app/api/public/lenders")).json()
  );
  expect(res.length).toBeGreaterThan(40);
});
```

Build fails if the API changes or returns an unexpected shape.

---

## 6 One-Time Data Sync Job Reset

If you’re running the twice-daily sync:

1. **Disable the sync job** temporarily.
2. **Clear IndexedDB** as shown in step 3.
3. **Run a manual sync** once; confirm 43 products.
4. **Re-enable the cron schedule** (12 PM & 12 AM MST).

---

### Done ✅

With these steps:

* The client always points to the staff DB via the public API.
* Any missing or broken API immediately surfaces in builds/tests.
* The 8-product fallback exists only (optionally) in development.

Let me know if you’d like sample code for the clear-cache helper, or help wiring the Playwright test into your CI.
