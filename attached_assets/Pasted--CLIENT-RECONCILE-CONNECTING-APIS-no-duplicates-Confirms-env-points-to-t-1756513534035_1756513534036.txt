# ┏━━━━━━━━ CLIENT: RECONCILE CONNECTING APIS (no duplicates) ━━━━━━━━┓
# • Confirms env points to the same Staff base/token
# • Probes canonical endpoints only
# • Enforces single path usage; deletes legacy helpers
# • Writes reports/api_inventory_client.{json,md}
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
set -euo pipefail

echo "== CLIENT ENV =="
echo "VITE_STAFF_API_URL=${VITE_STAFF_API_URL:-https://staff.boreal.financial/api}"
echo "VITE_CLIENT_APP_SHARED_TOKEN set? $([ -n "${VITE_CLIENT_APP_SHARED_TOKEN:-}" ] && echo yes || echo no)"
BASE="${VITE_STAFF_API_URL:-https://staff.boreal.financial/api}"

# --- Probe current results ---
echo "-- /v1/products --"
curl -sS -H "Authorization: Bearer ${VITE_CLIENT_APP_SHARED_TOKEN:-}" "$BASE/v1/products" | jq 'length as $n | {count:$n, sample:(.[0]//null)}' || true
echo "-- /required-docs --"
curl -sS -H "Authorization: Bearer ${VITE_CLIENT_APP_SHARED_TOKEN:-}" "$BASE/required-docs" | jq '.[0]?' || true

# If /v1/products shows 0 **or** /required-docs is 404/null, you're on the wrong Staff env or token.
# Fix by ensuring these match Staff:
#   VITE_STAFF_API_URL=https://staff.boreal.financial/api
#   VITE_CLIENT_APP_SHARED_TOKEN == CLIENT_SHARED_BEARER (exact string)

# --- NO-DUP: remove legacy endpoints/services ---
rm -f src/services/lenderProducts.ts src/services/lender-products.ts 2>/dev/null || true
if command -v rg >/dev/null 2>&1; then
  echo "Scanning for legacy endpoints…"
  if rg -n "/lender-products|/api/products(?!/v1)" src; then
    echo "❌ Found legacy endpoint references above. Replace with '/v1/products' only, then rerun."; exit 2;
  else
    echo "✔ No legacy endpoint references detected."
  fi
fi

# --- Generate Client inventory (JSON+MD) ---
mkdir -p scripts reports
cat > scripts/scan_endpoints.client.mjs <<'JS'
import fs from 'fs';
const BASE=(process.env.VITE_STAFF_API_URL||'https://staff.boreal.financial/api').replace(/\/+$/,'');
const TOK =process.env.VITE_CLIENT_APP_SHARED_TOKEN||'';
const HEAD = TOK?{Authorization:`Bearer ${TOK}`}:{};
async function j(u,opt={}){ const r=await fetch(u,{...opt,headers:{...(opt.headers||{}),...HEAD}}); const ct=r.headers.get('content-type')||''; let b=null; try{b=ct.includes('json')?await r.json():await r.text();}catch{}; return {u,status:r.status,ok:r.ok,ct,body:b};}
const eps=[['GET','/v1/products'],['GET','/lenders'],['GET','/required-docs'],['POST','/applications/validate-intake']];
const rep={base:BASE,when:new Date().toISOString(),results:[]};
for(const [m,p] of eps){ const u=BASE+p; try{ const r=m==='GET'?await j(u):await j(u,{method:'POST',headers:{'Content-Type':'application/json'},body:'{}'}); rep.results.push({m,p,status:r.status,ok:r.ok,ct:r.ct,count:Array.isArray(r.body)?r.body.length:null,sample:Array.isArray(r.body)?r.body[0]:r.body}); }catch(e){rep.results.push({m,p,error:String(e)});} }
fs.writeFileSync('reports/api_inventory_client.json',JSON.stringify(rep,null,2));
let md=`# Client→Staff API Inventory\n\n- Base: ${rep.base}\n- When: ${rep.when}\n\n| method | path | status | ok | ct | count/sample |\n|---|---|---:|:--:|---|---|\n`; for (const r of rep.results){ md+=`| ${r.m} | \`${r.p}\` | ${r.status??''} | ${r.ok?'✅':'❌'} | ${r.ct??''} | ${(r.count??(r.sample?'`sample`':''))} |\n`; } fs.writeFileSync('reports/api_inventory_client.md',md); console.log('✅ wrote client inventory');
JS
node scripts/scan_endpoints.client.mjs
sed -n '1,60p' reports/api_inventory_client.md || true

# --- Final verify (should now match Staff: 44 products, required-docs 200) ---
echo "== CLIENT FINAL VERIFY =="
curl -sS -H "Authorization: Bearer ${VITE_CLIENT_APP_SHARED_TOKEN:-}" "$BASE/v1/products" | jq 'length'
curl -sS -H "Authorization: Bearer ${VITE_CLIENT_APP_SHARED_TOKEN:-}" "$BASE/required-docs" | jq 'length' || true

echo "✅ CLIENT READY"
