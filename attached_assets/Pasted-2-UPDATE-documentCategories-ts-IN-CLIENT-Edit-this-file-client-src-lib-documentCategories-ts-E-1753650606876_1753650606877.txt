2. UPDATE documentCategories.ts IN CLIENT
Edit this file:
📍 client/src/lib/documentCategories.ts

Ensure it exactly matches the backend enum names.

Replace with this full updated version:

ts
Copy
Edit
export const DOCUMENT_CATEGORIES = [
  { value: 'accounts_payable', label: 'Accounts Payable' },
  { value: 'accounts_receivable', label: 'Accounts Receivable' },
  { value: 'articles_of_incorporation', label: 'Articles of Incorporation' },
  { value: 'balance_sheet', label: 'Balance Sheet' },
  { value: 'bank_statements', label: 'Bank Statements' },
  { value: 'business_license', label: 'Business License' },
  { value: 'business_plan', label: 'Business Plan' },
  { value: 'cash_flow_statement', label: 'Cash Flow Statement' },
  { value: 'collateral_docs', label: 'Collateral Documents' },
  { value: 'drivers_license_front_back', label: 'Driver’s License (Front & Back)' },
  { value: 'equipment_quote', label: 'Equipment Quote' },
  { value: 'accountant_financials', label: 'Accountant Prepared Financials' },
  { value: 'invoice_samples', label: 'Invoice Samples' },
  { value: 'other', label: 'Other Documents' },
  { value: 'personal_financials', label: 'Personal Financial Statement' },
  { value: 'personal_guarantee', label: 'Personal Guarantee' },
  { value: 'profit_and_loss', label: 'Profit & Loss Statement' },
  { value: 'proof_of_identity', label: 'Proof of Identity' },
  { value: 'signed_application', label: 'Signed Application' },
  { value: 'supplier_agreement', label: 'Supplier Agreement' },
  { value: 'tax_returns', label: 'Tax Returns' },
  { value: 'void_cheque', label: 'Voided Check' }
];
🔁 Important: Change any of the following if they exist:

profit_loss_statement → profit_and_loss

financial_statements → accountant_financials

personal_financial_statement → personal_financials

void_pad → void_cheque

🖼️ 3. VERIFY STEP 5 DROPDOWN
Edit:
📍 client/src/routes/Step5_UploadDocuments.tsx or similar

Check that DOCUMENT_CATEGORIES is imported and looped to render the dropdown.
Ensure all 22 document types appear visually.

🧪 Manual test:

Go to /apply/step-5

Ensure all 22 labels appear in the dropdown

📤 4. TEST UI UPLOAD FOR EACH DOCUMENT
Run this test:

bash
Copy
Edit
node test-upload-documents-ui.js
Or test in browser:

js
Copy
Edit
const formData = new FormData();
formData.append("documentType", "profit_and_loss");
formData.append("document", new File(["test"], "pl_test.pdf", { type: "application/pdf" }));

fetch("/api/public/upload/YOUR-APP-ID-HERE", {
  method: "POST",
  body: formData
}).then(r => r.json()).then(console.log);
Repeat for all 22 document types.

🧾 5. VERIFY IN STAFF PORTAL
After upload, go to the Staff App > Sales Pipeline > Application > Documents tab.

Check:

Correct document name

Correct category (under the right heading)

Preview + download works

No fallback/rejected messages

🔁 6. OPTIONAL: HARDEN BACKEND ENUM VALIDATION
In the Staff backend (Express validator or Zod schema):

Enforce a strict enum check

Return clear 400 Bad Request with Invalid document type: xyz if invalid

This prevents silent drops.

✅ FINAL CHECKLIST
Task	Status
Get canonical enum list from backend	🔲 Required
Update client documentCategories.ts	🔲 Required
Ensure UI dropdown uses exact enum values	🔲 Required
Test all 22 uploads (UI + API)	🔲 Required
Verify documents appear in correct categories	🔲 Required
Add backend validation error if enum mismatched	🔲 Optional
Add logging if upload fails	🔲 Optional

Let me know when you’re ready and I can generate the fixed documentCategories.ts file or push it to Replit.