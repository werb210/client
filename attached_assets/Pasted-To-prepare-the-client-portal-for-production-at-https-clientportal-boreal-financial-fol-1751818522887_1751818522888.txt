To prepare the **client portal** for **production at `https://clientportal.boreal.financial/`**, follow this **step-by-step deployment checklist**. This ensures the app uses the **correct backend (`https://app.boreal.financial/api`)**, the environment is correctly configured, and **SignNow + all workflows function as expected.**

---

## ‚úÖ CLIENT PRODUCTION DEPLOYMENT PLAN

**Target URL:** `https://clientportal.boreal.financial/`
**Target Backend:** `https://app.boreal.financial/api`

---

### üîß 1. Update Environment Variables (Production)

Update the `.env.production` file in the **client app**:

```bash
VITE_API_BASE_URL=https://app.boreal.financial/api
VITE_STAFF_API_URL=https://app.boreal.financial
VITE_SIGNNOW_REDIRECT_URL=https://clientportal.boreal.financial/step6-signature

# Optional analytics flags
VITE_ENABLE_ANALYTICS=true
VITE_ENABLE_ERROR_REPORTING=true
NODE_ENV=production
```

üß† This will ensure:

* All API calls go to the **production backend**
* The embedded SignNow signing flow redirects to Step 6 correctly
* Errors and analytics can be tracked in production if enabled

---

### üß™ 2. Test the Build Locally (Optional)

Before deploying, test locally to verify config:

```bash
npm run build
npx serve -s dist
```

Then visit `http://localhost:5000` and:

* Submit Step 1‚Äì4
* Check network tab ‚Üí API should go to `https://app.boreal.financial/api`

---

### üõ†Ô∏è 3. Deploy to Production Host

Depending on your host (e.g. Replit, Vercel, Netlify, custom server), do one of the following:

#### If using Replit:

* Set these in the Replit **Secrets** tab for the client app:

  ```
  VITE_API_BASE_URL
  VITE_STAFF_API_URL
  VITE_SIGNNOW_REDIRECT_URL
  NODE_ENV=production
  ```
* Rebuild and redeploy:

  ```bash
  npm run build
  ```

#### If using custom hosting:

* Upload the `dist/` folder to your static site host
* Ensure HTTPS and SSL certs are active for `clientportal.boreal.financial`

---

### üß™ 4. Smoke Test the Live Deployment

Go to `https://clientportal.boreal.financial/` and perform the following:

| Step     | Expected Result                 |
| -------- | ------------------------------- |
| Step 1‚Äì2 | Product list loads (41 lenders) |
| Step 3‚Äì4 | API creates real `app_prod_*`   |
| Step 5   | Document upload works           |
| Step 6   | Embedded SignNow iframe loads   |
| Step 7   | Confirmation page displays      |

üß† In the browser DevTools ‚Üí **Network tab**:
‚úÖ Ensure all requests are to `https://app.boreal.financial/api/...`
‚ùå No requests should go to `staffportal.replit.app`

---

### üßë‚Äçüíª 5. Enable Cross-Origin Access (already done)

No changes needed ‚Äî staff backend already includes:

```ts
Access-Control-Allow-Origin: https://clientportal.boreal.financial
Access-Control-Allow-Credentials: true
```

---

### ‚úÖ Final Success Checklist

| Requirement                               | Status |
| ----------------------------------------- | ------ |
| CORS enabled on backend                   | ‚úÖ      |
| Environment variables set                 | ‚úÖ      |
| SignNow redirect URL correct              | ‚úÖ      |
| VITE\_API\_BASE\_URL points to production | ‚úÖ      |
| Deployed client runs on custom domain     | ‚úÖ      |
| Signing + upload works end-to-end         | ‚úÖ      |

---

### üîÅ Optional: Analytics & Monitoring

If using tools like Sentry, LogRocket, or custom monitoring:

* Add relevant SDK scripts to your `index.html`
* Enable `VITE_ENABLE_ANALYTICS` and `VITE_ENABLE_ERROR_REPORTING`

---

## üèÅ Summary

To make `https://clientportal.boreal.financial/` production-ready:

1. Set all `.env.production` variables correctly
2. Build and deploy using `npm run build`
3. Ensure it's using the correct backend (`https://app.boreal.financial/api`)
4. Verify embedded SignNow works (Step 6)
5. Perform full smoke test flow

Once deployed, everything will function **fully integrated and production-ready**. Let me know when it's live and I‚Äôll confirm end-to-end behavior.
