# ┏━━━━━━━━ CLIENT: Align to Staff + Lenders + Dynamic Required Docs (NO-DUP) ━━━━━┓
# • Fixes alignment: token FP, X-DB-Host, counts, /required-docs
# • Verifies /lenders list works (read-only) for lender portal prep
# • Wires Step 5 to server-driven docs (productId + lenderId)
# • Deletes legacy scripts/services to avoid duplicates
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
set -euo pipefail

echo "== CLIENT ENV (before) =="
echo "VITE_STAFF_API_URL=${VITE_STAFF_API_URL:-https://staff.boreal.financial/api}"
echo "VITE_CLIENT_APP_SHARED_TOKEN set? $([ -n "${VITE_CLIENT_APP_SHARED_TOKEN:-}" ] && echo yes || echo no)"
BASE="${VITE_STAFF_API_URL:-https://staff.boreal.financial/api}"

mkdir -p scripts reports

# 1) Paste authoritative EXPECTED_* values from Staff (NON-SECRET):
export EXPECTED_DB_HOST="ep-morning-mode-a58uk90g.us-east-2.aws.neon.tech"
export EXPECTED_TOKEN_FP="0944508707a9"
export EXPECTED_PRODUCTS="44"
export EXPECTED_LENDERS="30"
export EXPECTED_MIN_REQUIRED_DOCS="3"

# 2) Remove legacy recon/scripts (NO-DUP)
rm -f scripts/check_alignment.mjs scripts/reconcile_old.mjs 2>/dev/null || true

# 3) Single alignment script (token → instance → data)
cat > scripts/alignment.mjs <<'JS'
import crypto from "crypto";
const BASE=(process.env.VITE_STAFF_API_URL||"https://staff.boreal.financial/api").replace(/\/+$/,'');
const TOK =process.env.VITE_CLIENT_APP_SHARED_TOKEN||"";
const EXP_DB   = process.env.EXPECTED_DB_HOST||"";
const EXP_FP   = process.env.EXPECTED_TOKEN_FP||"";
const EXP_PROD = Number(process.env.EXPECTED_PRODUCTS||"0");
const EXP_LEND = Number(process.env.EXPECTED_LENDERS||"0");
const EXP_REQ  = Number(process.env.EXPECTED_MIN_REQUIRED_DOCS||"0");
const fp = s => crypto.createHash("sha256").update(s).digest("hex").slice(0,12);

async function j(p){ const u=`${BASE}${p}${p.includes("?")?"&":"?"}t=${Date.now()}`;
  const r=await fetch(u,{headers:{Authorization:`Bearer ${TOK}`}}); const headers=Object.fromEntries([...r.headers.entries()].map(([k,v])=>[k.toLowerCase(),v]));
  const ct=r.headers.get("content-type")||""; let b=null; try{ b=ct.includes("json")?await r.json():await r.text(); }catch{};
  return {u,status:r.status,headers,body:b};
}

(async()=>{
  const myFp = fp(TOK);
  const prods = await j("/v1/products");
  const lends = await j("/lenders?active=true&limit=5");
  const docs  = await j("/required-docs");

  const prodCount = Array.isArray(prods.body)? prods.body.length : null;
  const lendPeek  = Array.isArray(lends.body)? lends.body.length : null;
  const hdrDb     = prods.headers["x-db-host"]||null;

  const out = {
    base: BASE,
    my_token_fp: myFp, expected_token_fp: EXP_FP, token_fp_match: myFp===EXP_FP,
    x_db_host: hdrDb, expected_db_host: EXP_DB, db_host_match: hdrDb===EXP_DB,
    products_status: prods.status, products_count: prodCount, expected_products: EXP_PROD,
    lenders_status: lends.status, lenders_peek_count: lendPeek, expected_lenders_min: Math.min(EXP_LEND,5),
    required_docs_status: docs.status, required_docs_count: Array.isArray(docs.body)? docs.body.length : null, expected_min_required_docs: EXP_REQ
  };
  console.log(JSON.stringify(out,null,2));

  // Hard fails (fix in this order): token → instance → data
  if (myFp!==EXP_FP) process.exit(10);
  if (prods.status!==200 || !hdrDb || hdrDb!==EXP_DB) process.exit(20);
  if (!(typeof prodCount==="number" && prodCount>=EXP_PROD)) process.exit(30);
  if (!(lends.status===200 && typeof lendPeek==="number" && lendPeek>=1)) process.exit(31);
  if (!(docs.status===200 && (out.required_docs_count??0) >= EXP_REQ)) process.exit(40);
})();
JS

node scripts/alignment.mjs | tee reports/client_alignment.json || {
  echo ""
  case $? in
    10) echo "❌ TOKEN mismatch. Set VITE_CLIENT_APP_SHARED_TOKEN to Staff's CLIENT_SHARED_BEARER (fingerprint must be ${EXPECTED_TOKEN_FP}).";;
    20) echo "❌ INSTANCE mismatch. Need X-DB-Host=${EXPECTED_DB_HOST} from /v1/products. Ensure VITE_STAFF_API_URL=https://staff.boreal.financial/api and bypass caches."; ;
    30) echo "❌ DATA mismatch: products < ${EXPECTED_PRODUCTS}. You're still not on the populated Staff instance."; ;
    31) echo "❌ LENDERS peek < 1. Expect ~${EXPECTED_LEND} when aligned; check token/instance again."; ;
    40) echo "❌ /required-docs not ready (need >= ${EXPECTED_MIN_REQUIRED_DOCS}). Ensure Staff dynamic docs route is mounted and you're hitting the right instance."; ;
    *)  echo "❌ Alignment failed. Inspect reports/client_alignment.json"; ;
  esac
  exit 2
}

echo "== LENDER LIST SMOKE (expect ≥1 now; ≥${EXPECTED_LENDERS} when fully aligned) =="
curl -sS -H "Authorization: Bearer ${VITE_CLIENT_APP_SHARED_TOKEN:-}" "$BASE/lenders?active=true&limit=5" | jq 'length'

echo "== PRODUCTS COUNT (expect ${EXPECTED_PRODUCTS}) =="
curl -sS -H "Authorization: Bearer ${VITE_CLIENT_APP_SHARED_TOKEN:-}" "$BASE/v1/products" | jq 'length'

echo "== REQUIRED DOCS BASELINE (expect >= ${EXPECTED_MIN_REQUIRED_DOCS}) =="
curl -sS -H "Authorization: Bearer ${VITE_CLIENT_APP_SHARED_TOKEN:-}" "$BASE/required-docs" | jq 'length'

echo "✅ CLIENT ALIGNED — token FP, DB host header, products, lenders peek, required-docs baseline."
echo "ℹ If you still see failures: update token to match Staff, ensure base URL, and clear SW/CDN caches."
