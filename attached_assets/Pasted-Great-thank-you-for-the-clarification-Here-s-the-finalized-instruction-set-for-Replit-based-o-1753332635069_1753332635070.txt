Great — thank you for the clarification. Here's the **finalized instruction set for Replit** based on your answers.

---

## ✅ REPLIT INSTRUCTIONS – CLIENT APPLICATION

### 🟪 PART 1: Update `/dashboard` Page

**Replace the “Multi-Step View” tile with:**

* **Title:** `Upload Missing Documents`
* **Subtitle:** `Securely upload your required documents`
* **Color:** Same purple style as before
* **Icon:** Use `CloudArrowUp` or similar
* **On click:** Navigate to `/upload-documents`

---

### 🟦 PART 2: Implement `/upload-documents` Page

**Route:** `/upload-documents`

### 🔐 Authentication / Application ID Handling

* Attempt to read `applicationId` from:

  * URL param: `?id=1234-uuid`
  * OR fallback to: `localStorage.getItem("applicationId")`
* If neither is found, redirect back to `/dashboard` with a warning popup: “Missing application. Please start an application before uploading documents.”

### 📄 Required Documents Enforcement (Same as Step 5)

* Load application from `/api/public/applications/:applicationId`

* Pull `form_data.step1.productCategory`

* Use this `productCategory` to determine required document types:

  Example logic:

  ```ts
  const requiredDocsMap = {
    factoring: ['bank_statements', 'financial_statements'],
    term_loan: ['bank_statements', 'pnl', 'balance_sheet'],
    equipment_financing: ['bank_statements', 'financial_statements', 'signed_application']
  };

  const requiredTypes = requiredDocsMap[productCategory] ?? [];
  ```

* Render one upload block per required `documentType`

* Reuse existing UI logic from `/apply/step-5` for uploading documents

### 📤 Upload Logic

* POST to: `/api/public/upload/:applicationId`
* Attach file as `multipart/form-data`
* Append `documentType` as field (e.g. `financial_statements`)
* On upload success:

  * Show ✅ “Uploaded”
* On error:

  * Show ⚠️ warning with retry option

### ✅ Completion Logic

* Once all required documents are uploaded:

  * Show green banner: `✅ All required documents submitted. A Boreal team member will review your application shortly.`

---

## 🧠 Memory of Application ID (Auto-stored on submission)

In `/apply/step-6` (final step), ensure:

```ts
localStorage.setItem("applicationId", createdApp.id);
```

This guarantees `/upload-documents` works even if user skips over Step 5 or leaves and returns later.

---

### 🚫 DO NOT:

* Re-finalize the application after upload
* Let users submit more than the required docs
* Let users skip upload blocks if required

---

## ✅ FINAL NOTES FOR REPLIT

Replit must:

1. Remove “Multi-Step View” from `/dashboard`
2. Add “Upload Missing Documents” tile that links to `/upload-documents`
3. Create `/upload-documents` page that:

   * Reads `applicationId` from URL or localStorage
   * Loads required documents based on `form_data.step1.productCategory`
   * Enforces the same upload rules as Step 5
   * Attaches all uploads to the same application
   * Notifies the user when all are submitted

Please execute and report results back to ChatGPT after deployment.
