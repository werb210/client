# ┏ CLIENT: Align to Staff PROD — verify token FP, X-DB-Host, products, lenders, docs ━┓
# What this does:
# 1) Uses Staff’s EXPECTED_* to assert you’re on the SAME instance.
# 2) Fails fast if token/headers/data don’t match; prints the single fix to apply.
# 3) Confirms /v1/products, /lenders, /required-docs all live.
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
set -euo pipefail

echo "== CLIENT ENV =="
echo "VITE_STAFF_API_URL=${VITE_STAFF_API_URL:-https://staff.boreal.financial/api}"
echo "VITE_CLIENT_APP_SHARED_TOKEN set? $([ -n "${VITE_CLIENT_APP_SHARED_TOKEN:-}" ] && echo yes || echo no)"
BASE="${VITE_STAFF_API_URL:-https://staff.boreal.financial/api}"
mkdir -p scripts reports

# 1) Paste EXACT values from Staff (from reports/EXPECTED_FOR_CLIENT.env)
export EXPECTED_DB_HOST="ep-morning-mode-a58uk90g.us-east-2.aws.neon.tech"
export EXPECTED_TOKEN_FP="0944508707a9"
export EXPECTED_PRODUCTS="44"
export EXPECTED_LENDERS="30"
export EXPECTED_MIN_REQUIRED_DOCS="3"

# 2) Single alignment script (replaces any older copies — NO DUPES)
rm -f scripts/alignment.mjs scripts/check_alignment.mjs 2>/dev/null || true
cat > scripts/alignment.mjs <<'JS'
import crypto from "crypto";
const BASE=(process.env.VITE_STAFF_API_URL||"https://staff.boreal.financial/api").replace(/\/+$/,'');
const TOK =process.env.VITE_CLIENT_APP_SHARED_TOKEN||"";
const EXP_DB   = process.env.EXPECTED_DB_HOST||"";
const EXP_FP   = process.env.EXPECTED_TOKEN_FP||"";
const EXP_PROD = Number(process.env.EXPECTED_PRODUCTS||"0");
const EXP_LEND = Number(process.env.EXPECTED_LENDERS||"0");
const EXP_REQ  = Number(process.env.EXPECTED_MIN_REQUIRED_DOCS||"0");
const fp = s => crypto.createHash("sha256").update(s).digest("hex").slice(0,12);
async function j(p){ const u=`${BASE}${p}${p.includes("?")?"&":"?"}t=${Date.now()}`; const r=await fetch(u,{headers:{Authorization:`Bearer ${TOK}`}}); const h=Object.fromEntries([...r.headers.entries()].map(([k,v])=>[k.toLowerCase(),v])); const ct=r.headers.get("content-type")||""; let b=null; try{ b=ct.includes("json")?await r.json():await r.text(); }catch{}; return {u,status:r.status,headers:h,body:b}; }
(async()=>{
  const myFp = fp(TOK);
  const prods = await j("/v1/products");
  const lends = await j("/lenders?active=true&limit=5");
  const docs  = await j("/required-docs");
  const prodCount = Array.isArray(prods.body)? prods.body.length : null;
  const lendPeek  = Array.isArray(lends.body)? lends.body.length : null;
  const hdrDb     = prods.headers["x-db-host"]||null;
  const out = {
    base: BASE,
    my_token_fp: myFp, expected_token_fp: EXP_FP, token_fp_match: myFp===EXP_FP,
    x_db_host: hdrDb, expected_db_host: EXP_DB, db_host_match: hdrDb===EXP_DB,
    products_status: prods.status, products_count: prodCount, expected_products: EXP_PROD,
    lenders_status: lends.status, lenders_peek_count: lendPeek, expected_lenders_min: Math.min(EXP_LEND,5),
    required_docs_status: docs.status, required_docs_count: Array.isArray(docs.body)? docs.body.length : null, expected_min_required_docs: EXP_REQ
  };
  console.log(JSON.stringify(out,null,2));
  if (myFp!==EXP_FP) process.exit(10);
  if (prods.status!==200 || !hdrDb || hdrDb!==EXP_DB) process.exit(20);
  if (!(typeof prodCount==="number" && prodCount>=EXP_PROD)) process.exit(30);
  if (!(lends.status===200 && typeof lendPeek==="number" && lendPeek>=1)) process.exit(31);
  if (!(docs.status===200 && (out.required_docs_count??0) >= EXP_REQ)) process.exit(40);
})();
JS

# 3) Run alignment and show the one fix to apply if it fails
set +e
node scripts/alignment.mjs | tee reports/client_alignment.json
rc=$?
set -e

if [ $rc -ne 0 ]; then
  echo ""
  case $rc in
    10) echo "❌ TOKEN mismatch → set VITE_CLIENT_APP_SHARED_TOKEN to Staff’s CLIENT_SHARED_BEARER so FP=${EXPECTED_TOKEN_FP}."; ;;
    20) echo "❌ INSTANCE/header mismatch → need X-DB-Host=${EXPECTED_DB_HOST} from /v1/products. Check URL & clear SW/CDN caches."; ;;
    30) echo "❌ DATA mismatch: products < ${EXPECTED_PRODUCTS} → Staff PROD not synced to populated DB or old build."; ;;
    31) echo "❌ LENDERS peek < 1 → expect ~${EXPECTED_LENDERS}; re-check token/instance."; ;;
    40) echo "❌ /required-docs < ${EXPECTED_MIN_REQUIRED_DOCS} or 404 → ensure Staff dynamic route is deployed and you’re on PROD."; ;;
    *)  echo "❌ Alignment failed. Inspect reports/client_alignment.json"; ;;
  esac
  exit 2
fi

# 4) Quick smokes (read-only)
echo "== LENDERS peek (≥1; ~${EXPECTED_LENDERS} total expected) =="
curl -sS -H "Authorization: Bearer ${VITE_CLIENT_APP_SHARED_TOKEN:-}" "$BASE/lenders?active=true&limit=5" | jq 'length'
echo "== PRODUCTS count (expect ${EXPECTED_PRODUCTS}) =="
curl -sS -H "Authorization: Bearer ${VITE_CLIENT_APP_SHARED_TOKEN:-}" "$BASE/v1/products" | jq 'length'
echo "== REQUIRED-DOCS baseline (expect >= ${EXPECTED_MIN_REQUIRED_DOCS}) =="
curl -sS -H "Authorization: Bearer ${VITE_CLIENT_APP_SHARED_TOKEN:-}" "$BASE/required-docs" | jq 'length'

echo "✅ CLIENT aligned with Staff PROD."
