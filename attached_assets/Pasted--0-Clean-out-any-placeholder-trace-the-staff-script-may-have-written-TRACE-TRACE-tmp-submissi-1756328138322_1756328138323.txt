# 0) Clean out any placeholder trace the staff script may have written
TRACE="${TRACE:-/tmp/submission_continuity.json}"
if [ -f "$TRACE" ] && grep -q 'PASTE_THE_JSON_FROM_TRACE_JSON_BEGIN_TO_END_HERE' "$TRACE"; then
  echo "Placeholder trace detected at $TRACE — removing it."
  rm -f "$TRACE"
fi

# 1) Generate a real trace from the CLIENT app (same host/container as the staff check)
CLIENT_BASE="${CLIENT_BASE:-http://localhost:5000}"
STAFF_BASE="${STAFF_BASE:-https://staff.boreal.financial}"

# (Best-effort) refresh client cache
curl -fsS -X POST "$CLIENT_BASE/internal/pull-staff-products" -H 'content-type: application/json' -d '{}' >/dev/null || true

# Pick a Staff product (prefer US -> CA -> first), tolerate field variants
S_RAW="$(curl -fsS "$STAFF_BASE/api/v1/products")"
PID="$(echo "$S_RAW" | jq -r '([.[]|select((.countryOffered // .country_offered // .country)=="US")][0].id)
                              //([.[]|select((.countryOffered // .country_offered // .country)=="CA")][0].id)
                              // .[0].id')"
SPROD="$(echo "$S_RAW" | jq -c --arg id "$PID" '.[]|select(.id==$id)')"
SCNTRY="$(echo "$SPROD" | jq -r '.countryOffered // .country_offered // .country // "US"')"

# Build intake (derive amount from min/max if present)
SMIN="$(echo "$SPROD" | jq -r '.minimumLendingAmount // .min_amount // empty')"
SMAX="$(echo "$SPROD" | jq -r '.maximumLendingAmount // .max_amount // empty')"
if [[ -n "$SMIN" && -n "$SMAX" && "${SMIN//[^0-9.]}" != "" && "${SMAX//[^0-9.]}" != "" ]]; then
  AMOUNT="$(( ( ${SMIN%.*} + ${SMAX%.*} ) / 2 ))"
else
  AMOUNT=25000
fi
STIB="$(echo "$SPROD" | jq -r '.min_time_in_business // empty')"
SREV="$(echo "$SPROD" | jq -r '.min_monthly_revenue // empty')"
TIB="$([ -n "$STIB" ] && echo "${STIB%.*}" || echo 120)"
REV="$([ -n "$SREV" ] && echo "${SREV%.*}" || echo 100000)"

INTAKE="$(jq -n --arg pid "$PID" --arg c "$SCNTRY" \
               --argjson amt "$AMOUNT" --argjson tib "$TIB" --argjson rev "$REV" \
               --arg ind "Technology" \
               '{product_id:$pid,country:$c,amount:$amt,timeInBusinessMonths:$tib,monthlyRevenue:$rev,industry:$ind}')"

# Validate & submit via CLIENT
VRESP="$(curl -s -X POST "$CLIENT_BASE/api/applications/validate-intake?diag=1" -H 'content-type: application/json' -d "$INTAKE")"
[ "$(echo "$VRESP" | jq -r '.ok // false')" = "true" ] || { echo "Validation failed"; echo "$VRESP" | jq '.'; exit 1; }

SRESP="$(curl -s -X POST "$CLIENT_BASE/api/applications" -H 'content-type: application/json' -d "$INTAKE")"
APP_ID="$(echo "$SRESP" | jq -r '.id // .application_id // .applicationId // empty')"
[ -n "$APP_ID" ] && [ "$APP_ID" != "null" ] || { echo "Client submission returned no application id"; exit 1; }

# Write the real trace (NO PLACEHOLDER)
jq -n --arg app_id "$APP_ID" --argjson intake "$INTAKE" --argjson staff_product "$SPROD" \
      --arg client_base "$CLIENT_BASE" --arg staff_base "$STAFF_BASE" \
      '{meta:{timestamp:(now|todate),client_base:$client_base,staff_base:$staff_base},
        app_id:$app_id,intake:$intake,staff_product_at_submit:$staff_product}' > "$TRACE"

# Sanity-check the JSON
jq -e . "$TRACE" >/dev/null && echo "Trace written: $TRACE (APP_ID=$APP_ID)"

# 2) Run the STAFF continuity verification (read-only; does NOT write the trace)
STAFF_BASE="${STAFF_BASE:-https://staff.boreal.financial}"

APP_RAW="$(
  curl -fsS "$STAFF_BASE/applications/$APP_ID?diag=1" 2>/dev/null \
  || curl -fsS "$STAFF_BASE/api/applications/$APP_ID?diag=1" 2>/dev/null \
)"
[ -n "$APP_RAW" ] || { echo "Staff read-by-id failed for $APP_ID"; exit 1; }

# Compare fields + snapshot + required_documents
PID_TRACE="$(jq -r '.intake.product_id' "$TRACE")"
COUNTRY_TRACE="$(jq -r '.intake.country' "$TRACE")"

S_PRODUCT_ID="$(echo "$APP_RAW" | jq -r '.product_id // .productId // empty')"
S_COUNTRY_SUBMIT="$(echo "$APP_RAW" | jq -r '.submission_country // .country // empty')"

[ "$S_PRODUCT_ID" = "$PID_TRACE" ] && echo "✅ product_id round-tripped" || echo "❌ product_id mismatch"
[ "$S_COUNTRY_SUBMIT" = "$COUNTRY_TRACE" ] && echo "✅ submission country preserved" || echo "❌ country mismatch"
