### What the screenshot tells us

* **Error origin:** `client/src/lib/api.ts` line 53 → `fetch(url, config)` is throwing *“Failed to fetch”*.
* **When it happens:** as soon as the client tries to hit the staff backend.
* **Root causes (most common):**

  1. **Wrong base-URL** – env still points to the old `https://staff.borealfinance.app/api`.
  2. **Backend not publicly reachable** – `https://staffportal.replit.app/api` isn’t live or returns 404.
  3. **CORS** – staff backend doesn’t allow the client origin, so the browser blocks the request.
  4. **Missing `credentials:"include"`** – if you’re using cookie sessions the request must include credentials.

---

## Quick-fix checklist — do these in order

| # | Action                                              | Where                     | What to change / check                                                                                                                                            |
| - | --------------------------------------------------- | ------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| 1 | **Verify staff API URL**                            | Browser                   | Visit `https://staffportal.replit.app/api/health` (or `/auth/login`).<br>• 200 = backend is up.<br>• 404 / cannot reach = backend not running – start/deploy it.  |
| 2 | **Set correct base-URL**                            | `client/.env.production`  | `<br>VITE_API_BASE_URL=https://staffportal.replit.app/api<br>`<br>Re-build / redeploy the client after editing.                                                   |
| 3 | **Allow credentials in fetch** (if cookie sessions) | `client/src/lib/api.ts`   | `ts<br>const response = await fetch(url, {<br>  ...config,<br>  credentials: "include", // ⬅️ add this<br>});<br>`                                                |
| 4 | **Add CORS rules**                                  | `staff backend (Express)` | `ts<br>import cors from "cors";<br>app.use(cors({<br>  origin: ["https://YOUR-CLIENT-APP.com", "https://client.replit.app"],<br>  credentials: true,<br>}));<br>` |
| 5 | **Retest**                                          | Client preview/incognito  | Log in → expect redirect to `/api/auth/login` on the staff domain, no runtime fetch error.                                                                        |

---

### After applying

1. Restart the **staff** Replit instance (so new CORS env is active).
2. Re-run the **client** build / preview.
3. Watch the browser console; the “Failed to fetch” overlay should disappear and you should see the redirect to the staff login page instead.

---

#### If it still fails

* **Network panel** – check the request URL & response code (CORS errors show as “(blocked\:cors)” in DevTools).
* **Environment mismatch** – ensure you edited the `.env` file that matches the environment you’re running (dev vs prod).

Fix those four items and the client will authenticate successfully against `https://staffportal.replit.app/api`.
