To make your chatbot automatically fill the **entire screen on mobile phones** (not tablets or desktops), you'll need responsive CSS and some JavaScript to toggle a “fullscreen” class based on device size. Here's how:

---

## 📱 Step-by-Step: Auto Fullscreen on Phones

### 1. **Detect Phone Using CSS Media Queries**

Add this to your stylesheet:

```css
@media (max-width: 600px) {
  .chat-container.fullscreen-mobile {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    margin: 0;
    border-radius: 0;
    z-index: 9999;
  }
}
```

– `@media (max-width:600px)` targets phone widths.
– `.fullscreen-mobile` will expand the chat to full viewport on phones. ([stackoverflow.com][1], [docs.streamlit.io][2])

---

### 2. **Toggle Class with JavaScript**

Insert this in your chat initialization logic (e.g. when chat widget opens):

```js
function openChat() {
  const chat = document.querySelector('.chat-container');
  chat.classList.add('open');

  if (window.matchMedia('(max-width: 600px)').matches) {
    chat.classList.add('fullscreen-mobile');
  }
}

function closeChat() {
  const chat = document.querySelector('.chat-container');
  chat.classList.remove('open', 'fullscreen-mobile');
}
```

This ensures only phones trigger fullscreen mode.

---

### 3. **Reset Layout on Resize**

To handle orientation changes:

```js
window.addEventListener('resize', () => {
  const chat = document.querySelector('.chat-container');
  if (chat.classList.contains('open')) {
    if (window.matchMedia('(max-width: 600px)').matches) {
      chat.classList.add('fullscreen-mobile');
    } else {
      chat.classList.remove('fullscreen-mobile');
    }
  }
});
```

---

### ✅ Final Checklist

* \[x] Add CSS under `max-width: 600px` for full-screen behaviors.
* \[x] Toggle `.fullscreen-mobile` in JS when chat opens/closes.
* \[x] Listen for window resizes to dynamically adjust the style.

---

### Why This Works

This method mirrors best practices seen in chat widgets for WordPress and Zoho—where full-screen activation is conditional on screen width, ensuring phones get full coverage without affecting larger devices .

---

Let me know if you'd like the ready-to-use CSS + JS snippet that you can drop into your existing chat widget!

[1]: https://stackoverflow.com/questions/79701714/responsive-sidebar-inside-a-floating-full-screen-chat-widget-html-css-js?utm_source=chatgpt.com "Responsive sidebar inside a floating / full-screen chat widget"
[2]: https://docs.streamlit.io/develop/tutorials/chat-and-llm-apps/build-conversational-apps?utm_source=chatgpt.com "Build a basic LLM chat app - Streamlit Docs"
