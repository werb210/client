Excellent — let’s proceed with **auditing and validating the remaining categories** and **revenue-based filtering logic**, just like we did with Working Capital.

---

## ✅ PHASE 1: Product Category Audit (Term Loans, Factoring, etc.)

### ✅ Goals

* Ensure **`amount_min`/`amount_max`** logic works for **all categories**
* Detect any **missing or mismatched fields**
* Confirm that valid products pass Step 2 filtering

### 🔍 Categories to Audit:

* Term Loans
* Factoring
* Equipment Financing
* LOC (Lines of Credit)
* Merchant Cash Advance
* Bridge Loans
* Other / Custom

---

### ✅ Instructions for Replit Agent (Client Application)

Please execute the following:

#### 🔧 \[CLIENT] Step 2 Filtering Validation for All Categories

1. **Update `validate-step2-filtering.js`** to test each category:

   * Test amounts: `$25,000`, `$50,000`, `$250,000`
   * Countries: `CA`, `US`
   * Validate if each product passes or fails
2. **Use the existing `getAmountRange()` fallback helper**
3. **Output:**

   * Category
   * Product name
   * Range
   * Country
   * Pass/Fail reasons

#### 📤 Report Back

* Number of products per category
* Number passing filtering
* Field mismatch or missing values
* Total categories with issues

---

## ✅ PHASE 2: Revenue-Based Filtering Audit (`revenue_min`)

### ✅ Goals

* Ensure products with `revenue_min` enforce correct filtering
* Validate fallback logic in case of missing fields (`revenueMin`, `minimumRevenue`, etc.)

---

### 🔧 \[CLIENT] Revenue Filtering Implementation

Please do the following:

#### 🧠 Update `useRecommendations.ts`

1. Add fallback logic for revenue minimum:

   ```ts
   function getRevenueMin(product) {
     return product.revenue_min ?? product.revenueMin ?? product.minimumRevenue ?? 0;
   }
   ```
2. Apply filtering logic:

   ```ts
   const revenueMatch = applicantRevenue >= getRevenueMin(product);
   ```

#### 🧪 Test Cases

* Test applicant revenue at:

  * \$0
  * \$100,000
  * \$500,000
* Log products that:

  * Fail only due to revenue
  * Pass all filters
  * Are excluded entirely

---

### 📤 Report Back:

* Which products had revenue filtering enforced?
* Were any filtered due to missing/misnamed revenue fields?
* Confirm fallback chain is functioning

---

Once both steps are complete, we’ll:

* Patch any additional schema mismatches
* Finalize the full matching engine schema
* Lock in production validation hooks

Ready for Replit to begin. Please confirm once you want the agent to execute Steps 1 & 2.
