‚úÖ Thanks. This confirms a **critical disconnect** in your current application flow:

---

### ‚ùå Root Cause of Smart Fields Not Populating in SignNow

| Step | Location                           | Behavior                                                                                                                         |
| ---- | ---------------------------------- | -------------------------------------------------------------------------------------------------------------------------------- |
| 4    | `Step4_ApplicantInfo_Complete.tsx` | Submits `{step1, step3, step4}` correctly to staff backend                                                                       |
| 6    | `Step6_SignNowIntegration.tsx`     | Calls `POST /applications/{id}/signing-status` ‚Äî ‚ùå but **sends no Smart Field mapping**                                          |
| üß©   | Missing Link                       | The smart field generation code (or mapping object) lives in **Step4\_ApplicantInfo.tsx**, but that file is unused in production |
| üîÅ   | Result                             | Staff backend never receives prefill\_texts or mapped Smart Field values                                                         |
| üìÉ   | SignNow Document                   | Smart fields remain blank despite correct setup on the template                                                                  |

---

### ‚úÖ Required Fix (Client)

**üõ† Replit Client Instructions**

1. **Move Smart Field Mapping Logic**
   From: `Step4_ApplicantInfo.tsx`
   To: ‚úÖ `Step6_SignNowIntegration.tsx`

   The logic that creates the Smart Fields object (matching the names on your template like `contact_first_name`, `requested_amount`, etc.) must be moved to Step 6, where the signature is triggered.

2. **Send Smart Fields to Staff**
   In `Step6_SignNowIntegration.tsx`, update your `POST /applications/{id}/signing-status` call to include:

   ```ts
   const response = await fetch(`/api/public/applications/${applicationId}/signing-status`, {
     method: "POST",
     headers: {
       "Content-Type": "application/json",
     },
     body: JSON.stringify({
       smartFields, // this should be the full field-to-value map
       redirectUrl: "https://clientportal.boreal.financial/#/step7-finalization",
     }),
   });
   ```

3. **Confirm Structure Matches Staff Expectation**
   The `smartFields` object must match the 28-field structure generated by staff‚Äôs `generateSmartFields()`. Example:

   ```ts
   const smartFields = {
     contact_first_name: step4.firstName,
     contact_last_name: step4.lastName,
     requested_amount: step1.requestedAmount,
     legal_business_name: step3.businessName,
     // ...
   };
   ```

4. **Re-Test Workflow**
   Once moved and injected, you should see:

   * ‚úÖ Fields auto-filled in SignNow template
   * ‚úÖ `prefill_texts` arriving at the staff backend
   * ‚úÖ Webhook `user.document.fieldinvite.signed` triggering Step 7 redirect

---

Would you like me to generate the full `smartFields` construction code for Step 6 now?
