Client Application
A) Shared prerequisites (duplicated here on purpose)

1) ENV (append):
File: .env

# ===== Analytics =====
ANALYTICS_DEFAULT_CURRENCY=CAD
ANALYTICS_PDF_LOGO_S3_KEY=branding/logo.png
ANALYTICS_TIMEZONE=America/Edmonton
ANALYTICS_PDF_CRON=0 7 1 * *


2) DB migration — Daily KPIs (same as staff):
File: server/db/migrations/2025_08_14_analytics_kpis.sql

-- IDENTICAL to the Staff block (analytics_daily table + analytics_rolling_30d view)
CREATE TABLE IF NOT EXISTS analytics_daily (
  day date PRIMARY KEY,
  leads_new int DEFAULT 0,
  apps_created int DEFAULT 0,
  apps_funded int DEFAULT 0,
  funded_amount numeric DEFAULT 0,
  avg_hours_to_decision numeric,
  slas_breached int DEFAULT 0,
  messages_in int DEFAULT 0,
  messages_out int DEFAULT 0,
  esign_sent int DEFAULT 0,
  esign_completed int DEFAULT 0,
  kyc_approved int DEFAULT 0,
  updated_at timestamptz NOT NULL DEFAULT now()
);
CREATE OR REPLACE VIEW analytics_rolling_30d AS
SELECT
  (SELECT COALESCE(SUM(leads_new),0) FROM analytics_daily WHERE day > now()::date - 30) AS leads_30d,
  (SELECT COALESCE(SUM(apps_created),0) FROM analytics_daily WHERE day > now()::date - 30) AS apps_30d,
  (SELECT COALESCE(SUM(apps_funded),0) FROM analytics_daily WHERE day > now()::date - 30) AS funded_30d,
  (SELECT COALESCE(SUM(funded_amount),0) FROM analytics_daily WHERE day > now()::date - 30) AS funded_amount_30d;


Run:

npm run db:migrate


3) Shared services/jobs (same as staff):

Copy server/services/analytics.ts, server/jobs/analyticsDaily.ts, and server/jobs/analyticsReportJob.ts exactly as in Staff block.

Ensure queues schedule includes the analytics repeatable (monthly export).

4) API routes (same shape as staff, client-visible only if you expose a small “My Progress” widget later):
File: server/routes/analytics/index.ts
(You can copy the same file; permissions can be gated server-side as needed.)

Mount:
File: server/index.ts

import analyticsRouter from "./routes/analytics";
app.use("/api/analytics", analyticsRouter);


These shared steps are intentionally duplicated here for your dual-app workflow.

B) Client-specific changes

No client-facing UI in this step. (PDF exports & dashboard are staff-only today.)

C) Tests (client)

No client tests needed in this step.

D) Reporting (client)

Confirm DB migration applied cleanly.

Confirm /api/analytics/summary responds (permissioned as configured).