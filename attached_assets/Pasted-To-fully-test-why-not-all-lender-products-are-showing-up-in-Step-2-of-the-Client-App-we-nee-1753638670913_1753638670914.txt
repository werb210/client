To fully test why **not all lender products are showing up in Step 2** of the **Client App**, we need to run a controlled **input → filter → output** test across the recommendation engine. Here's exactly how to do that:

---

## ✅ CLIENT APP — STEP 2 DEBUG PLAN

### 📍 Purpose: Ensure all lender products that match the filters are correctly displayed

---

### 🔍 PART 1: Test Inputs (Simulated User Submission)

Run this test multiple times with **known combinations** that should yield specific lender products:

```ts
// Example Test Submission (Step 1 Output)
{
  country: "Canada",
  amountRequested: 100000,
  whatAreYouLookingFor: "Term Loan",       // Product category
  purposeOfFunds: "Working Capital"
}
```

---

### 🧪 PART 2: Manual Output Expectation Check

Check that these lender products (from your database) **match the above** and should be returned:

* Country = Canada ✅
* Min amount ≤ 100,000 AND Max amount ≥ 100,000 ✅
* Category = "Term Loan" ✅
* Purpose of Funds = “Working Capital” (if used as filter) ✅

Example expected result:

```ts
[
  {
    name: "Lender A - Term Loan",
    country: "Canada",
    minAmount: 50000,
    maxAmount: 250000,
    category: "Term Loan",
    useCases: ["Working Capital", "Expansion"]
  },
  ...
]
```

If products that match those rules are not showing up, we’ve confirmed a **filtering logic issue**.

---

### 🧩 PART 3: How to Diagnose It in Code

#### 1. Open:

`client/src/lib/filterLenders.ts`
(or wherever the filtering logic exists)

#### 2. Look for conditions like:

```ts
if (product.minAmount > amountRequested) return false;
if (product.maxAmount < amountRequested) return false;
if (product.country !== formData.country) return false;
if (product.category !== formData.whatAreYouLookingFor) return false;
// Optional:
if (!product.useCases.includes(formData.purposeOfFunds)) return false;
```

#### ✅ What to Check:

* Are string comparisons case-sensitive? Fix with `.toLowerCase()` if needed
* Is `purposeOfFunds` being used as a **strict match** vs **partial match**?
* Is country being compared to an ISO code instead of a full name?
* Are products missing `useCases` in the data?

---

### ⚙️ PART 4: Add Logging for Local Dev

Inside `filterLenders`, temporarily add:

```ts
console.log('Checking product:', product.name);
console.log('Reason skipped:', reason);
```

This will tell you **why** each product is excluded.

---

### 🛠 OPTIONAL: Add a Dev Route to Show Raw Matching Process

Add a debug route `/dev/recommendation-debug` that:

* Accepts Step 1 inputs
* Shows: ✅ Matching products | ❌ Skipped products + reason

---

### 📣 Report Back

Once tested:

* Which lender products were expected but didn’t show?
* What values were entered in Step 1?
* What does the filterLenders function show as the reason?

I can then help you fix the filtering logic. Would you like the test harness or logging code next?
