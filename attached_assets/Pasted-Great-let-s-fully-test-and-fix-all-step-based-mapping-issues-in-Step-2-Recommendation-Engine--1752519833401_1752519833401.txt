Great — let's **fully test and fix all step-based mapping issues in Step 2 (Recommendation Engine)**.

Please follow this structured **instruction set for Replit**, and ensure all changes are reported back when complete:

---

## 🔧 Replit Instructions — Fix Step 2 Mapping Issues in Client

### 📍 Target File:

`client/src/routes/Step2_Recommendations.tsx`

---

### 🛠️ Objective:

**Ensure all data mapping in Step 2 uses `state.step1`, `state.step3`, and `state.step4` exclusively.**
Legacy flat fields like `state.requestedAmount`, `state.businessName`, etc. must be removed.

---

### ✅ Action Plan:

#### 1. **Scan for Violations**

Run this script to detect flat-field violations in `Step2_Recommendations.tsx`:

```ts
grep -n "state\." src/routes/Step2_Recommendations.tsx | grep -v "step[1-7]"
```

#### 2. **Replace Legacy Fields**

Replace any of the following (if found):

| ❌ Legacy Field          | ✅ Replace With                 |
| ----------------------- | ------------------------------ |
| `state.requestedAmount` | `state.step1?.requestedAmount` |
| `state.lookingFor`      | `state.step1?.lookingFor`      |
| `state.businessName`    | `state.step3?.businessName`    |
| `state.yearsInBusiness` | `state.step3?.yearsInBusiness` |
| `state.annualRevenue`   | `state.step3?.annualRevenue`   |

#### 3. **Fix Recommendation Engine Input**

Anywhere `getRecommendations`, `filterLenders`, or similar logic pulls raw props, ensure they pull like:

```ts
const requestedAmount = state.step1?.requestedAmount;
const useOfFunds = state.step1?.lookingFor;
const businessAge = state.step3?.yearsInBusiness;
```

#### 4. **Run Live Test**

Once fixed, run the full flow:

* Complete Step 1 and Step 3
* Load Step 2
* Ensure lender recommendations are generated correctly

Log values from `state.step1`, `step3`, etc. to confirm correct structure.

#### 5. **Report Back to ChatGPT**

Once done, report the following:

---

### 📣 Replit Report Template

> **Step 2 Mapping Fix Completed**
> ✅ Flat field references removed from `Step2_Recommendations.tsx`
> ✅ Now using: `state.step1?.requestedAmount`, `state.step3?.businessName`, etc.
> ✅ Live test confirms correct recommendations generated
> ✅ Zero mapping errors or undefined values

---

Please begin this fix in **client/src/routes/Step2\_Recommendations.tsx** and report back.
