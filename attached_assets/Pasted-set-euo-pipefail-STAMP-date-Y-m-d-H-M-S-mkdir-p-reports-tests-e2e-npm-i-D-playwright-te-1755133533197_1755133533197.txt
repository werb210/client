set -euo pipefail
STAMP="$(date +%Y%m%d-%H%M%S)"; mkdir -p reports tests/e2e
npm i -D @playwright/test playwright >/dev/null 2>&1 || true
npx playwright install --with-deps >/dev/null 2>&1 || true

cat > tests/e2e/ui_monkey.spec.ts <<'TS'
import { test, expect } from "@playwright/test";
const CLIENT = process.env.CLIENT_URL || "http://127.0.0.1:5173";
const STAFF  = process.env.STAFF_URL  || "http://127.0.0.1:5000";
const MINUTES = Number(process.env.MONKEY_MINUTES || "15");

test('UI monkey: random clicks without console/network errors', async ({ page }) => {
  // prime staff session for portal endpoints
  await page.request.post(`${STAFF}/api/portal/test-login`, { data: {} });
  const errors:string[]=[]; const badNet:string[]=[];
  page.on('console', m => { if (m.type()==='error') errors.push(m.text()); });
  page.on('response', async r => { if (r.status()>=400) badNet.push(`${r.status()} ${r.url()}`); });

  await page.goto(`${CLIENT}/messages`, { waitUntil: "domcontentloaded" });
  const end = Date.now() + MINUTES*60*1000;

  while (Date.now() < end) {
    // random click target: buttons, links, tabs, menuitems
    const loc = page.locator('button,a,[role="tab"],[role="menuitem"],[data-testid]');
    const count = await loc.count();
    const idx = Math.floor(Math.random()*Math.max(count,1));
    if (count>0) await loc.nth(idx).click({ timeout: 2000 }).catch(()=>{});
    // occasionally type & send a message
    if (Math.random()<0.2) {
      await page.getByTestId('compose-message').fill(`monkey ${Date.now()}`).catch(()=>{});
      await page.getByTestId('send-message').click().catch(()=>{});
    }
    await page.waitForTimeout(500);
  }

  expect(errors, 'console errors').toHaveLength(0);
  expect(badNet, 'network 4xx/5xx').toHaveLength(0);
});
TS

CLIENT_URL="${CLIENT_URL:-http://127.0.0.1:5173}" STAFF_URL="${STAFF_URL:-http://127.0.0.1:5000}" \
  MONKEY_MINUTES="${MONKEY_MINUTES:-15}" npx playwright test tests/e2e/ui_monkey.spec.ts --reporter=list \
  | tee "reports/client-monkey-${STAMP}.log" || true

echo "Logs: reports/client-monkey-${STAMP}.log"
