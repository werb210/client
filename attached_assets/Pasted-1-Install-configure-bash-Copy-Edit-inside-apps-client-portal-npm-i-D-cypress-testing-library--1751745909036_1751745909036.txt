1. Install & configure
bash
Copy
Edit
# inside apps/client-portal
npm i -D cypress @testing-library/cypress
cypress.config.ts

ts
Copy
Edit
import { defineConfig } from 'cypress'

export default defineConfig({
  e2e: {
    baseUrl : 'http://localhost:5173',           // Vite dev server
    supportFile: 'cypress/support/e2e.ts',
    env: {
      STAFF_API: 'https://staffportal.replit.app/api'
    }
  },
})
cypress/support/e2e.ts

ts
Copy
Edit
import '@testing-library/cypress/add-commands'
2. The test
cypress/e2e/full-handoff.cy.ts

ts
Copy
Edit
/// <reference types="cypress" />

describe('Full client â†’ staff hand-off', () => {
  const fundingAmount = '75000'
  const applicantEmail = 'qa+boreal@demo.dev'

  // ðŸ”Ž Intercept the exact Staff endpoints we care about
  beforeEach(() => {
    cy.intercept('POST', `${Cypress.env('STAFF_API')}/public/applications`).as('createApp')
    cy.intercept('POST', `${Cypress.env('STAFF_API')}/public/upload/*`).as('uploadDocs')
  })

  it('submits an application & documents with 2 valid 20X responses', () => {
    /* Step 1 */
    cy.visit('/apply/step-1')
    cy.findByLabelText(/requested amount/i).type(fundingAmount)
    cy.findByRole('button', { name: /continue/i }).click()

    /* Step 2 â€“ pick first recommended category & continue */
    cy.findAllByTestId('product-card').first().click()
    cy.findByRole('button', { name: /continue/i }).click()

    /* Step 3 â€” minimal business info */
    cy.findByLabelText(/operating name/i).type('QA Widgets LLC')
    cy.findByLabelText(/legal name/i).type('QA Widgets LLC')
    cy.findByRole('button', { name: /continue/i }).click()

    /* Step 4 â€” applicant info (truncated) */
    cy.findByLabelText(/email/i).clear().type(applicantEmail)
    cy.findByRole('button', { name: /continue/i }).click()

    /* Step 5 â€” upload a dummy statement */
    cy.fixture('bank_statement_sample.pdf', 'binary')
      .then(Cypress.Blob.binaryStringToBlob)
      .then(blob => {
        const file = new File([blob], 'bank_statement_sample.pdf', { type: 'application/pdf' })
        cy.get('input[type=file]').attachFile({ fileContent: blob, fileName: file.name, mimeType: file.type })
      })
    cy.findByRole('button', { name: /continue/i }).click()

    /* ===== Assertions on network traffic ===== */
    cy.wait('@createApp').its('response.statusCode').should('eq', 201)
      .then(intercept => {
        expect(intercept.response?.body.applicationId).to.match(/[0-9a-f-]{36}/)
      })

    cy.wait('@uploadDocs').its('response.statusCode').should('eq', 200)
  })
})
Run with

bash
Copy
Edit
npx cypress run --browser electron
