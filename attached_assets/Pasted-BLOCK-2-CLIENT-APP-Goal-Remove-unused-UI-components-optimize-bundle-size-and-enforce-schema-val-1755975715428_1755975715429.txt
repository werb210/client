BLOCK 2 — CLIENT APP
Goal

Remove unused UI components, optimize bundle size, and enforce schema validation so the client automatically switches from cached products → 32 live products.

Steps
1. Remove Unused UI Components

Safe to delete from src/components/ui/:

aspect-ratio.tsx
alert-dialog.tsx
slider.tsx
hover-card.tsx
toggle-group.tsx
avatar.tsx
accordion.tsx
breadcrumb.tsx
carousel.tsx
context-menu.tsx
dropdown-menu.tsx
menubar.tsx
navigation-menu.tsx
pagination.tsx
resizable.tsx
sidebar.tsx

2. Remove Legacy Application Components

Safe to delete:

Step1BusinessBasics.tsx
RecommendationCard.tsx
Step2DebugBypass.tsx
ProductCategoryCard.tsx
ApplicationStatusMonitor.tsx
DocumentPreview.tsx
DocumentUploadRequiredBanner.tsx
RetryFailedUploads.tsx
Step5Wrapper.tsx

3. Add Schema Validation for Lender Products

Edit:
src/hooks/useLenderProducts.ts

import { z } from "zod";

const LenderProductSchema = z.object({
  ok: z.boolean(),
  count: z.number(),
  products: z.array(
    z.object({
      id: z.string(),
      lenderName: z.string(),
      productName: z.string(),
      category: z.string(),
      country: z.string(),
      minAmount: z.number(),
      maxAmount: z.number(),
      interestRate: z.number(),
      termLength: z.string(),
      documentsRequired: z.array(z.string()),
      description: z.string().optional(),
      updatedAt: z.string(),
    })
  ),
});

export async function fetchLenderProducts() {
  const res = await fetch("/api/client/lender-products");
  const data = await res.json();
  const parsed = LenderProductSchema.safeParse(data);

  if (!parsed.success) {
    console.warn("Invalid lender products schema. Falling back to cached products.");
    return cachedProducts; // preserves stability
  }

  return parsed.data.products;
}

4. Testing

Run in the client app console:

fetch("/api/client/lender-products")
  .then(r => r.json())
  .then(d => console.log("Products received:", d.count, d.products));


✅ Expected: 32 live lender products replace the single cached product automatically.