[CLIENT APP]

# GOAL: Step 5 never blocks. Always show “Last 6 months bank statements” at minimum.
#       Prefer Staff API (/api/required-docs); fall back locally if needed.

# --- 1) API helper (append to client/src/lib/api.ts) ----------------------------
applypatch <<'PATCH'
*** Begin Patch
*** Update File: client/src/lib/api.ts
@@
+export type RequiredDocsInput = {
+  productId?: string;
+  category?: string;
+  country?: "US"|"CA" | string;
+  amount?: number;
+  lenderId?: string;
+};
+
+export type RequiredDoc = {
+  key: string;
+  label: string;
+  required: boolean;
+  months?: number;
+  reason?: string;
+};
+
+const BASELINE_DOC: RequiredDoc = {
+  key: "bank_statements",
+  label: "Last 6 months bank statements",
+  required: true,
+  months: 6
+};
+
+export async function listDocuments(input: RequiredDocsInput): Promise<RequiredDoc[]> {
+  // 1) Try Staff API (public)
+  try {
+    const r = await fetch("/api/required-docs", {
+      method: "POST",
+      headers: { "Content-Type": "application/json" },
+      credentials: "include",
+      body: JSON.stringify(input ?? {})
+    });
+    if (r.ok) {
+      const j = await r.json();
+      let docs: RequiredDoc[] = Array.isArray(j?.documents) ? j.documents : [];
+      // guarantee baseline >= 6 months
+      const idx = docs.findIndex(d => d.key === "bank_statements");
+      if (idx === -1) {
+        docs.unshift({ ...BASELINE_DOC });
+      } else {
+        const d = docs[idx];
+        docs[idx] = {
+          ...d,
+          required: true,
+          label: BASELINE_DOC.label,
+          months: Math.max(6, Number(d.months ?? 0))
+        };
+      }
+      return docs;
+    }
+  } catch (_) {/* fall through */}
+
+  // 2) Fallback (local baseline only)
+  return [ { ...BASELINE_DOC } ];
+}
*** End Patch
PATCH

# --- 2) Component usage (normalize + render) -----------------------------------
applypatch <<'PATCH'
*** Begin Patch
*** Update File: client/src/components/DynamicDocumentRequirements.tsx
@@
-import { /* previous import */ } from "@/lib/api";
+import { listDocuments, type RequiredDocsInput, type RequiredDoc } from "@/lib/api";
@@
-// when you need docs:
-// const docs = await listDocuments({ productId, category, country, amount });
+// Example usage:
+// const docs = await listDocuments({ productId, category, country, amount } as RequiredDocsInput);
+// docs is Guaranteed to include "Last 6 months bank statements"
*** End Patch
PATCH

# --- 3) Quick check (dev): should always include bank_6m baseline --------------
node -e "fetch('http://localhost:5000/api/required-docs',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({category:'Working Capital',country:'US',amount:50000})}).then(r=>r.json()).then(j=>console.log(j.documents)).catch(console.error)"
