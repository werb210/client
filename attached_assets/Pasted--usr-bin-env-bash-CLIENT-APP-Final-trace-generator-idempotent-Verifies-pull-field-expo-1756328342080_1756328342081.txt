#!/usr/bin/env bash
# CLIENT APP — Final trace generator (idempotent)
# - Verifies pull + field exposure quickly
# - Builds intake from Staff V1 truth
# - Validates + submits (only if no existing trace)
# - Writes /tmp/submission_continuity.json for Staff verification

set -euo pipefail
need(){ command -v "$1" >/dev/null || { echo "Missing $1"; exit 1; }; }
need curl; need jq

# --- Config (override as needed)
CLIENT_BASE="${CLIENT_BASE:-http://localhost:5000}"
STAFF_BASE="${STAFF_BASE:-https://staff.boreal.financial}"
TRACE="${TRACE:-/tmp/submission_continuity.json}"

# 0) If a previous successful trace exists, show it and exit safely
if [[ -s "$TRACE" ]] && jq -e '.app_id and .intake.product_id and .intake.country' "$TRACE" >/dev/null 2>&1; then
  echo "✅ Existing trace found at $TRACE — reusing:"
  jq -C '{app_id, intake, staff_product_at_submit: {id: .staff_product_at_submit.id, country: (.staff_product_at_submit.countryOffered // .staff_product_at_submit.country_offered // .staff_product_at_submit.country)}}' "$TRACE"
  exit 0
fi

echo "== CLIENT: ensure cache is fresh (best-effort) =="
curl -fsS -X POST "$CLIENT_BASE/internal/pull-staff-products" -H 'content-type: application/json' -d '{}' >/dev/null || true

echo "== CLIENT: fetch Staff V1 catalog =="
S_RAW="$(curl -fsS "$STAFF_BASE/api/v1/products")"
S_TOTAL="$(echo "$S_RAW" | jq 'length')"
echo "Staff products total: $S_TOTAL"

# Prefer US, else CA, else first — tolerate field variants
PID="$(echo "$S_RAW" | jq -r '([.[]|select((.countryOffered // .country_offered // .country)=="US")][0].id) // ([.[]|select((.countryOffered // .country_offered // .country)=="CA")][0].id) // .[0].id')"
[[ -n "$PID" && "$PID" != "null" ]] || { echo "No Staff product found"; exit 1; }

SPROD="$(echo "$S_RAW" | jq -c --arg id "$PID" '.[]|select(.id==$id)')"
SCNTRY="$(echo "$SPROD" | jq -r '.countryOffered // .country_offered // .country // empty')"
[[ -n "$SCNTRY" ]] || { echo "Selected product missing country"; exit 1; }

# Derive constraints: prefer Staff min/max; otherwise safe mids
SMIN="$(echo "$SPROD" | jq -r '.minimumLendingAmount // .min_amount // empty')"
SMAX="$(echo "$SPROD" | jq -r '.maximumLendingAmount // .max_amount // empty')"
if [[ -n "${SMIN:-}" && -n "${SMAX:-}" && "${SMIN//[^0-9.]}" != "" && "${SMAX//[^0-9.]}" != "" ]]; then
  AMOUNT="$(( ( ${SMIN%.*:-0} + ${SMAX%.*:-0} ) / 2 ))"
else
  AMOUNT="25000"
fi
STIB="$(echo "$SPROD" | jq -r '.min_time_in_business // empty')"
SREV="$(echo "$SPROD" | jq -r '.min_monthly_revenue // empty')"
TIB="$([ -n "${STIB:-}" ] && echo "${STIB%.*}" || echo 120)"
REV="$([ -n "${SREV:-}" ] && echo "${SREV%.*}" || echo 100000)"

INTAKE="$(jq -n --arg pid "$PID" --arg c "$SCNTRY" \
  --argjson amt "$AMOUNT" --argjson tib "$TIB" --argjson rev "$REV" \
  --arg ind "Technology" \
  '{product_id:$pid,country:$c,amount:$amt,timeInBusinessMonths:$tib,monthlyRevenue:$rev,industry:$ind}')"

echo "== CLIENT: Step 2 validation (/api/applications/validate-intake?diag=1) =="
VRESP="$(curl -s -X POST "$CLIENT_BASE/api/applications/validate-intake?diag=1" -H 'content-type: application/json' -d "$INTAKE")"
echo "$VRESP" | jq '. | {ok, errors, product: .product? // empty}'
[[ "$(echo "$VRESP" | jq -r '.ok // false')" == "true" ]] || { echo "❌ Validation failed"; exit 1; }

echo "== CLIENT: submit application (/api/applications) =="
SRESP="$(curl -s -X POST "$CLIENT_BASE/api/applications" -H 'content-type: application/json' -d "$INTAKE")"
echo "$SRESP" | jq '. | {id, ok, success, message}'
APP_ID="$(echo "$SRESP" | jq -r '.id // .application_id // .applicationId // empty')"
[[ -n "$APP_ID" && "$APP_ID" != "null" ]] || { echo "❌ No application id returned"; exit 1; }

echo "== CLIENT: write continuity trace =="
jq -n --arg app_id "$APP_ID" --argjson intake "$INTAKE" --argjson staff_product "$SPROD" \
  --arg client_base "$CLIENT_BASE" --arg staff_base "$STAFF_BASE" \
  '{meta:{timestamp:(now|todate),client_base:$client_base,staff_base:$staff_base},app_id:$app_id,intake:$intake,staff_product_at_submit:$staff_product}' \
  > "$TRACE"

echo "✅ CLIENT COMPLETE — trace saved to $TRACE"
jq -C '{app_id, intake, staff_product_at_submit: {id: .staff_product_at_submit.id, country: (.staff_product_at_submit.countryOffered // .staff_product_at_submit.country_offered // .staff_product_at_submit.country)}}' "$TRACE"
