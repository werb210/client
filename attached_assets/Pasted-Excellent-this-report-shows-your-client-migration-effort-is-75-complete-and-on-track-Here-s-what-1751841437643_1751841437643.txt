Excellent — this report shows your client migration effort is 75% complete and on track. Here’s what you should now instruct the **Client App Replit agent** to do to **complete the migration**, trigger a **clean production build**, and restore your expected **landing page** at `/`.

---

## ✅ REPLIT INSTRUCTION SET: COMPLETE LUCIDE MIGRATION & TRIGGER BUILD

### 👇 Give these direct instructions to the **Client Replit Agent**:

---

### 🧭 **Phase 1: Finalize lucide-react Removal (Last 15 Files)**

**Step 1: Finish converting remaining `lucide-react` imports**

* Complete conversion of the remaining 15 files using the icon batch replacement strategy.
* Use `@/lib/icons.tsx` as the only source of icons.
* Replace:

  * `WarningCircle`, `Info`, `Check`, `ArrowLeft`, `ArrowRight`, `Menu`, `Upload`, `Download`, `Trash`, `Loader2`, `X`, `Dot`, etc.
  * Replace icon JSX with the corresponding `<YourIcon />` or basic Unicode like `✔`, `⚠`, `❌` if a custom version doesn’t exist yet.

**Step 2: Confirm all `lucide-react` imports are gone**

```bash
grep -r "lucide-react" client/src
```

Ensure no files reference `lucide-react`.

**Step 3: Remove it from dependencies**

```bash
npm uninstall lucide-react
```

---

### 🧭 **Phase 2: Trigger Production Build**

**Step 4: Clear old dist**

```bash
rm -rf dist/public
```

**Step 5: Build using Vite**

```bash
cd client && npm run build
```

> Confirm the static bundle is generated in `client/dist/` and symlinked or copied into `server/dist/public`.

If build times out again:

* Temporarily raise timeout in Replit:

```bash
timeout 180 npm run build
```

---

### 🧭 **Phase 3: Serve Final Production Build**

**Step 6: Set production mode**
Ensure these are set:

* `FORCE_PRODUCTION=true`
* `NODE_ENV=production`

**Step 7: Restart production server**

```bash
kill 1
```

or press **“Stop” then “Run”** in Replit manually.

---

### 🧭 **Phase 4: Validate Output**

**Step 8: Go to [https://clientportal.boreal.financial](https://clientportal.boreal.financial)**

* Confirm root route (`/`) loads `LandingPage.tsx` with:

  * Title: “Professional Business Financing Solutions”
  * Orange CTA: “Start Your Application”
  * Feature cards
  * 3-step Apply process flow

**Step 9: Confirm app navigation still works**

* Test `/apply/step-1` to ensure app still flows into the main application form.

---

## 📌 Final Confirmation Criteria

| ✅ Item                                | Required Outcome                           |
| ------------------------------------- | ------------------------------------------ |
| `lucide-react` removed from all files | No imports, fully removed from build       |
| Custom icon library in use            | `@/lib/icons.tsx` used for all icons       |
| Production build succeeds             | `npm run build` completes with no timeout  |
| Root route loads `LandingPage.tsx`    | URL `/` displays expected landing content  |
| App flow preserved                    | `/apply/step-1` loads full 7-step workflow |

---

Let me know if you'd like me to generate a shell script, `build.sh`, or `.replit` run command to automate all of the above.
