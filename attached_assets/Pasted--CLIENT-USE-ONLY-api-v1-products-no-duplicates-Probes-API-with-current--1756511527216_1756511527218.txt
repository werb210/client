# ┏━━━━━━━━ CLIENT: USE ONLY /api/v1/products (no duplicates) ━━━━━━━━┓
# • Probes API with current env/token
# • Deletes legacy product fetchers/mounts
# • Enforces single endpoint path
# • Verifies count after Staff patch
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
set -euo pipefail

echo "== CLIENT PROBE =="
echo "VITE_STAFF_API_URL=${VITE_STAFF_API_URL:-https://staff.boreal.financial/api}"
echo "Token set? $([ -n "${VITE_CLIENT_APP_SHARED_TOKEN:-}" ] && echo yes || echo no)"

CLIENT_BASE="${VITE_STAFF_API_URL:-https://staff.boreal.financial/api}"

echo "-- /v1/products (pre-fix view) --"
curl -sSI -H "Authorization: Bearer ${VITE_CLIENT_APP_SHARED_TOKEN:-}" "$CLIENT_BASE/v1/products" | sed -n '1,20p' || true
curl -sS  -H "Authorization: Bearer ${VITE_CLIENT_APP_SHARED_TOKEN:-}" "$CLIENT_BASE/v1/products" | jq 'length as $n | {count:$n, sample:(.[0]//null)}' || true

echo "== CLIENT PATCH (NO-DUP) =="
# 1) Remove any legacy product services that call /lender-products or non-v1 paths
rm -f src/services/lenderProducts.ts src/services/lender-products.ts 2>/dev/null || true

# 2) Scan for legacy references (fail if any remain)
if command -v rg >/dev/null 2>&1; then
  echo "Scanning for legacy endpoints…"
  if rg -n "/lender-products|/api/products(?!/v1)" src; then
    echo "❌ Found legacy endpoints above. Please update those imports/calls to '/v1/products' and re-run."
    exit 2
  else
    echo "✔ No legacy endpoints detected."
  fi
fi

# 3) Create/overwrite a single fetch probe (safe utility) to confirm data flow
mkdir -p scripts
cat > scripts/pull_products_now.mjs <<'JS'
const BASE = process.env.VITE_STAFF_API_URL || 'https://staff.boreal.financial/api';
const TOK  = process.env.VITE_CLIENT_APP_SHARED_TOKEN || '';
(async () => {
  const r = await fetch(`${BASE}/v1/products`, { headers: { Authorization: `Bearer ${TOK}` } });
  const ct = r.headers.get('content-type')||'';
  let body=null; try{ body=await r.json(); }catch{}
  const count = Array.isArray(body) ? body.length : null;
  console.log(JSON.stringify({ url:`${BASE}/v1/products`, status:r.status, contentType:ct, count, sample: Array.isArray(body)?body[0]:body }, null, 2));
  if (!r.ok || !ct.includes('application/json')) process.exit(2);
})();
JS

echo "== CLIENT VERIFY =="
node scripts/pull_products_now.mjs
curl -sS -H "Authorization: Bearer ${VITE_CLIENT_APP_SHARED_TOKEN:-}" "$CLIENT_BASE/v1/products" | jq 'length'

echo "✅ CLIENT uses only /api/v1/products. Legacy paths removed. If count is 0, confirm Staff DB/catalog."
