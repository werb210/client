# ============================
# CLIENT APPLICATION — SINGLE BLOCK (copy/paste all)
# Feature: Tasks (Document Requests) — My Tasks page + Presigned Uploads
# Replit Rules Header (agent): Exact Execution • One block per app • No questions • Paste logs
# ============================
set -euo pipefail

# --- 0) Dependencies (already present in staff; not required here unless missing)
npm i @aws-sdk/client-s3 @aws-sdk/s3-request-presigner || true

# --- 1) (Shared) Client API already mounted by staff block at /api/client/docreq
# If this repo is a separate client backend, ensure the same routes exist (skip if shared)

# --- 2) Client UI — My Tasks page
mkdir -p client/src/client
cat > client/src/client/MyTasks.tsx << 'EOF'
import React, { useEffect, useState } from "react";

type Req = { id:string; title:string; description?:string; status:string; required:boolean; due_date?:string; application_id:string };

export default function MyTasks(){
  const contactId = new URLSearchParams(location.search).get("contactId") || "";
  const [items, setItems] = useState<Req[]>([]);
  const [busy, setBusy] = useState<string>("");

  async function load(){
    const list = await (await fetch(`/api/client/docreq?contactId=${encodeURIComponent(contactId)}`)).json();
    setItems(list);
  }

  async function uploadFor(reqId:string){
    const input = document.createElement("input");
    input.type = "file";
    input.onchange = async ()=>{
      const file = (input.files || [])[0]; if (!file) return;
      setBusy(reqId);
      // presign
      const ps = await (await fetch("/api/client/docreq/presign", {
        method:"POST", headers:{ "Content-Type":"application/json" },
        body: JSON.stringify({ contactId, requestId: reqId, filename: file.name, contentType: file.type || "application/octet-stream" })
      })).json();
      // PUT to S3
      await fetch(ps.url, { method:"PUT", headers: { "Content-Type": file.type || "application/octet-stream" }, body: file });
      // finalize
      await fetch("/api/client/docreq/finalize", {
        method:"POST", headers:{ "Content-Type":"application/json" },
        body: JSON.stringify({ contactId, requestId: reqId, filename: file.name, s3_key: ps.key, contentType: file.type || "application/octet-stream" })
      });
      setBusy("");
      await load();
      alert("Uploaded!");
    };
    input.click();
  }

  useEffect(()=>{ load(); }, []);
  if (!contactId) return <div className="p-6">Missing contactId</div>;

  return (
    <div className="p-6 max-w-3xl mx-auto space-y-4">
      <h1 className="text-xl font-semibold">My Tasks</h1>
      <table className="w-full text-sm border">
        <thead className="bg-gray-100"><tr><th className="p-2 text-left">Task</th><th className="p-2">Required</th><th className="p-2">Due</th><th className="p-2">Status</th><th className="p-2">Action</th></tr></thead>
        <tbody>
          {items.map(it=>(
            <tr key={it.id} className="border-t">
              <td className="p-2">
                <div className="font-medium">{it.title}</div>
                {it.description && <div className="text-xs text-gray-600">{it.description}</div>}
              </td>
              <td className="p-2 text-center">{it.required ? "Yes" : "No"}</td>
              <td className="p-2 text-center">{it.due_date || "-"}</td>
              <td className="p-2 text-center">{it.status}</td>
              <td className="p-2 text-center">
                {it.status === "approved" ? "✓" :
                  <button className="px-2 py-1 bg-black text-white rounded disabled:opacity-50" disabled={busy===it.id} onClick={()=>uploadFor(it.id)}>
                    {busy===it.id ? "Uploading…" : "Upload"}
                  </button>}
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
}
EOF

# Wire route (idempotent)
if ! grep -q "/client/tasks" client/src/App.tsx 2>/dev/null; then
  cat >> client/src/App.tsx << 'EOF'
import MyTasks from "./client/MyTasks";
<Route path="/client/tasks" element={<MyTasks />} />
EOF
fi

echo "=== CLIENT: My Tasks page added at /client/tasks?contactId=... (presigned upload flow). ==="
