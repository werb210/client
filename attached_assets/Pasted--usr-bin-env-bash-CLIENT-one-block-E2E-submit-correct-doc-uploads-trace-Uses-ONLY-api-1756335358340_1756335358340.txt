#!/usr/bin/env bash
# CLIENT â€” one-block E2E (submit + correct doc uploads + trace)
# Uses ONLY /api/v1/applications/:id/documents
set -euo pipefail
need(){ command -v "$1" >/dev/null || { echo "Missing $1"; exit 1; }; }; need curl; need jq

CLIENT_BASE="${CLIENT_BASE:-http://localhost:5000}"
STAFF_BASE="${STAFF_BASE:-https://staff.boreal.financial}"
TRACE="${TRACE:-/tmp/submission_continuity.json}"

# 1) Select a Staff product (truth source)
S_LIST="$(curl -fsS "$STAFF_BASE/api/v1/products" | jq -c 'if type=="array" then . else .items // [] end')"
[ "$(echo "$S_LIST" | jq 'length')" -gt 0 ] || { echo "no Staff products"; exit 1; }
PID="$(echo "$S_LIST" | jq -r '([.[]|select((.countryOffered // .country_offered // .country)=="US")][0].id)
                               //([.[]|select((.countryOffered // .country_offered // .country)=="CA")][0].id)
                               // .[0].id')"
SPROD="$(echo "$S_LIST" | jq -c --arg id "$PID" '.[]|select(.id==$id)')"
SCNTRY="$(echo "$SPROD" | jq -r '.countryOffered // .country_offered // .country')"
REQ_DOCS="$(echo "$SPROD" | jq -c '.required_documents // []')"

# 2) Build intake and submit
INTAKE="$(jq -n --arg pid "$PID" --arg c "$SCNTRY" --argjson amt 25000 --argjson tib 120 --argjson rev 100000 --arg ind "Technology" \
  '{product_id:$pid,country:$c,amount:$amt,timeInBusinessMonths:$tib,monthlyRevenue:$rev,industry:$ind}')"
APP="$(curl -fsS -X POST "$CLIENT_BASE/api/applications" -H 'content-type: application/json' -d "$INTAKE")"
APP_ID="$(echo "$APP" | jq -r '.id // .application_id // .applicationId // empty')"
[ -n "$APP_ID" ] || { echo "no app id"; echo "$APP"; exit 1; }

# 3) Upload two docs to the CORRECT endpoint
DOC_EP="$CLIENT_BASE/api/v1/applications/$APP_ID/documents"
mkdir -p /tmp/doc_test
echo "Example bank statement for $APP_ID" > /tmp/doc_test/bank_statement.txt
echo "Example tax return for $APP_ID"    > /tmp/doc_test/tax_return.txt

upload(){ curl -s -o /dev/null -w "%{http_code}" -X POST "$DOC_EP" \
  -F "file=@$1" -F "doc_type=$2"; }
[ "$(upload /tmp/doc_test/bank_statement.txt bank_statements)" = "201" ] || { echo "bank_statement upload failed"; exit 1; }
[ "$(upload /tmp/doc_test/tax_return.txt    tax_returns)"    = "201" ] || { echo "tax_return upload failed"; exit 1; }

# 4) Confirm attachments via GET (same API)
DOCS_JSON="$(curl -fsS "$DOC_EP")"
ATTACHED_COUNT="$(echo "$DOCS_JSON" | jq 'length')"
[ "$ATTACHED_COUNT" -ge 2 ] || { echo "documents not listed"; echo "$DOCS_JSON"; exit 1; }

# 5) Write continuity trace (for Staff verifier)
jq -n \
  --arg app_id "$APP_ID" \
  --argjson intake "$INTAKE" \
  --argjson staff_product "$SPROD" \
  --arg client_base "$CLIENT_BASE" \
  --arg staff_base "$STAFF_BASE" \
  --arg timestamp "$(date -Iseconds)" \
  --argjson required_documents "$REQ_DOCS" \
  --argjson uploaded_documents "$DOCS_JSON" \
  '{meta:{timestamp:$timestamp,client_base:$client_base,staff_base:$staff_base,test:"client_e2e_docs_v1"},
    app_id:$app_id,intake:$intake,staff_product_at_submit:$staff_product,
    required_documents:$required_documents,uploaded_documents:$uploaded_documents}' \
  > "$TRACE"

echo "CLIENT OK: app_id=$APP_ID docs_attached=$ATTACHED_COUNT trace=$TRACE"
